-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity handle_header is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pulse_metadata_V_TDATA : IN STD_LOGIC_VECTOR (855 downto 0);
    pulse_metadata_V_TVALID : IN STD_LOGIC;
    pulse_metadata_V_TREADY : OUT STD_LOGIC;
    data_word_keep_V : IN STD_LOGIC_VECTOR (7 downto 0);
    data_word_strb_V : IN STD_LOGIC_VECTOR (7 downto 0);
    data_word_user_V : IN STD_LOGIC_VECTOR (127 downto 0);
    data_word_last_V : IN STD_LOGIC_VECTOR (0 downto 0);
    data_word_id_V : IN STD_LOGIC_VECTOR (0 downto 0);
    data_word_dest_V : IN STD_LOGIC_VECTOR (0 downto 0);
    in_a_pulse_read : IN STD_LOGIC;
    in_a_xfer_bundle_rea : IN STD_LOGIC;
    break_after_pulse_re : IN STD_LOGIC;
    num_samples_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sample_counter_read : IN STD_LOGIC_VECTOR (31 downto 0);
    decimation_value_rea : IN STD_LOGIC_VECTOR (7 downto 0);
    decimation_counter_r : IN STD_LOGIC_VECTOR (7 downto 0);
    pulse_sequence_count : IN STD_LOGIC_VECTOR (63 downto 0);
    o_data_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_data_TVALID : OUT STD_LOGIC;
    o_data_TREADY : IN STD_LOGIC;
    o_data_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    o_data_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    o_data_TUSER : OUT STD_LOGIC_VECTOR (127 downto 0);
    o_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    o_data_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    o_data_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    pos_enc_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pos_enc_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    flags : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of handle_header is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv32_BA5EBA11 : STD_LOGIC_VECTOR (31 downto 0) := "10111010010111101011101000010001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_74757575 : STD_LOGIC_VECTOR (31 downto 0) := "01110100011101010111010101110101";
    constant ap_const_lv32_75757474 : STD_LOGIC_VECTOR (31 downto 0) := "01110101011101010111010001110100";
    constant ap_const_lv32_74747475 : STD_LOGIC_VECTOR (31 downto 0) := "01110100011101000111010001110101";
    constant ap_const_lv32_97989898 : STD_LOGIC_VECTOR (31 downto 0) := "10010111100110001001100010011000";
    constant ap_const_lv32_98989797 : STD_LOGIC_VECTOR (31 downto 0) := "10011000100110001001011110010111";
    constant ap_const_lv32_97979798 : STD_LOGIC_VECTOR (31 downto 0) := "10010111100101111001011110011000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_354 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101010100";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_352 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101010010";
    constant ap_const_lv32_353 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101010011";
    constant ap_const_lv32_328 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100101000";
    constant ap_const_lv32_347 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000111";
    constant ap_const_lv32_348 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101001000";
    constant ap_const_lv32_34F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101001111";
    constant ap_const_lv32_350 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101010000";
    constant ap_const_lv32_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    constant ap_const_lv32_327 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal pulse_metadata_V_TDATA_blk_n : STD_LOGIC;
    signal o_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln152_reg_845 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal p_Repl2_s_fu_537_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_Repl2_s_reg_859 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln210_reg_909 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_0_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal x1_0_reg_347 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal pulse_metadata_V_rea_reg_820 : STD_LOGIC_VECTOR (855 downto 0);
    signal tmp_fu_499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_keep_V_fu_507_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_keep_V_reg_835 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_fu_511_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_reg_840 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln152_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Result_16_fu_520_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_16_reg_849 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal x_fu_531_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_854 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal p_Result_18_fu_553_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_18_reg_863 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Repl2_1_reg_868 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_io : BOOLEAN;
    signal header_5_reg_873 : STD_LOGIC_VECTOR (31 downto 0);
    signal decimation_value_0_n_reg_879 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_fu_605_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_19_reg_884 : STD_LOGIC_VECTOR (31 downto 0);
    signal header_4_fu_618_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal header_4_reg_889 : STD_LOGIC_VECTOR (31 downto 0);
    signal header_6_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal header_6_reg_894 : STD_LOGIC_VECTOR (31 downto 0);
    signal header_8_fu_625_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal header_8_reg_899 : STD_LOGIC_VECTOR (31 downto 0);
    signal header_9_reg_904 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln210_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal x_1_fu_643_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal trunc_ln214_fu_649_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln223_fu_664_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state9 : STD_LOGIC;
    signal ap_phi_mux_x_0_phi_fu_340_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_tmp_data_V_reg_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln226_reg_406 : STD_LOGIC_VECTOR (7 downto 0);
    signal pulse_sequence_count_2_reg_417 : STD_LOGIC_VECTOR (63 downto 0);
    signal previous_gate_bit_wr_reg_426 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln226_1_reg_439 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_ln226_2_reg_448 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln226_3_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln226_4_reg_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0151_reg_477 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal p_Result_21_fu_653_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_490_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_17_fu_544_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_5_fu_589_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_598_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_sequence_index_l_fu_609_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln226_fu_669_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal or_ln226_1_fu_674_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln226_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln226_1_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_499_p3 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_499_p3 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state8_io) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state9);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_boolean_0 = ap_block_state8_io) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_0_preg <= p_0151_reg_477;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_1_preg <= or_ln226_fu_669_p2;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_2_preg <= or_ln226_1_fu_674_p2;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_3_preg <= phi_ln226_3_reg_457;
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_4_preg <= phi_ln226_1_reg_439;
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_5_preg <= phi_ln226_reg_406;
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_6_preg <= pulse_sequence_count_2_reg_417;
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_7_preg <= previous_gate_bit_wr_reg_426;
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_8_preg <= phi_ln226_2_reg_448;
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_9_preg <= phi_ln226_4_reg_466;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter1_tmp_data_V_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((trunc_ln214_fu_649_p1 = ap_const_lv4_F) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0)) or ((trunc_ln214_fu_649_p1 = ap_const_lv4_E) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0)) or ((trunc_ln214_fu_649_p1 = ap_const_lv4_D) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0)) or ((trunc_ln214_fu_649_p1 = ap_const_lv4_C) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0)) or ((trunc_ln214_fu_649_p1 = ap_const_lv4_B) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0)) or ((trunc_ln214_fu_649_p1 = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0)) or ((trunc_ln214_fu_649_p1 = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0)))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= ap_const_lv32_0;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= ap_const_lv32_BA5EBA11;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_9) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= header_9_reg_904;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= header_8_reg_899;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= header_6_reg_894;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= header_5_reg_873;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= header_4_reg_889;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= pos_enc_1;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= pos_enc_0;
            elsif (((trunc_ln214_fu_649_p1 = ap_const_lv4_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= p_Result_19_reg_884;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                ap_phi_reg_pp1_iter1_tmp_data_V_reg_358 <= ap_phi_reg_pp1_iter0_tmp_data_V_reg_358;
            end if; 
        end if;
    end process;

    p_0151_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                p_0151_reg_477 <= ap_const_lv1_0;
            elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0151_reg_477 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    phi_ln226_1_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                phi_ln226_1_reg_439 <= decimation_value_0_n_reg_879;
            elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln226_1_reg_439 <= decimation_value_rea;
            end if; 
        end if;
    end process;

    phi_ln226_2_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                phi_ln226_2_reg_448 <= header_5_reg_873;
            elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln226_2_reg_448 <= num_samples_read;
            end if; 
        end if;
    end process;

    phi_ln226_3_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                phi_ln226_3_reg_457 <= p_Repl2_1_reg_868;
            elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln226_3_reg_457 <= (0=>break_after_pulse_re, others=>'-');
            end if; 
        end if;
    end process;

    phi_ln226_4_reg_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                phi_ln226_4_reg_466 <= ap_const_lv32_1;
            elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln226_4_reg_466 <= sample_counter_read;
            end if; 
        end if;
    end process;

    phi_ln226_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                phi_ln226_reg_406 <= ap_const_lv8_1;
            elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln226_reg_406 <= decimation_counter_r;
            end if; 
        end if;
    end process;

    previous_gate_bit_wr_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                previous_gate_bit_wr_reg_426 <= ap_const_lv1_1;
            elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                previous_gate_bit_wr_reg_426 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    pulse_sequence_count_2_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                pulse_sequence_count_2_reg_417 <= add_ln223_fu_664_p2;
            elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pulse_sequence_count_2_reg_417 <= pulse_sequence_count;
            end if; 
        end if;
    end process;

    x1_0_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_fu_637_p2 = ap_const_lv1_0))) then 
                x1_0_reg_347 <= x_1_fu_643_p2;
            elsif (((ap_const_boolean_0 = ap_block_state8_io) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                x1_0_reg_347 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    x_0_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_499_p3 = ap_const_lv1_0))) then 
                x_0_reg_337 <= sample_counter_read;
            elsif (((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                x_0_reg_337 <= x_reg_854;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state8_io) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                decimation_value_0_n_reg_879 <= pulse_metadata_V_rea_reg_820(847 downto 840);
                    header_4_reg_889(7 downto 0) <= header_4_fu_618_p1(7 downto 0);
                header_5_reg_873 <= pulse_metadata_V_rea_reg_820(839 downto 808);
                header_6_reg_894 <= header_6_fu_622_p1;
                header_8_reg_899 <= header_8_fu_625_p1;
                header_9_reg_904 <= pulse_sequence_count(63 downto 32);
                p_Repl2_1_reg_868 <= pulse_metadata_V_rea_reg_820(851 downto 851);
                    p_Result_19_reg_884(19 downto 0) <= p_Result_19_fu_605_p1(19 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln152_reg_845 <= icmp_ln152_fu_515_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln210_reg_909 <= icmp_ln210_fu_637_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                p_Repl2_s_reg_859 <= pulse_metadata_V_rea_reg_820(850 downto 850);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_Result_16_reg_849 <= p_Result_16_fu_520_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_Repl2_s_fu_537_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                p_Result_18_reg_863 <= p_Result_18_fu_553_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                pulse_metadata_V_rea_reg_820 <= pulse_metadata_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_499_p3 = ap_const_lv1_0))) then
                tmp_keep_V_reg_835 <= tmp_keep_V_fu_507_p1;
                tmp_strb_V_reg_840 <= tmp_strb_V_fu_511_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                x_reg_854 <= x_fu_531_p2;
            end if;
        end if;
    end process;
    p_Result_19_reg_884(31 downto 20) <= "000000000000";
    header_4_reg_889(31 downto 8) <= "000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, pulse_metadata_V_TVALID, o_data_TREADY, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6, p_Repl2_s_fu_537_p3, ap_CS_fsm_state7, ap_CS_fsm_state8, tmp_fu_499_p3, icmp_ln152_fu_515_p2, ap_block_state6_io, ap_block_state8_io, icmp_ln210_fu_637_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage2_subdone, ap_block_pp1_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_499_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (tmp_fu_499_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln152_fu_515_p2 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln152_fu_515_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6) and (p_Repl2_s_fu_537_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((p_Repl2_s_fu_537_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((o_data_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_io) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((icmp_ln210_fu_637_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((icmp_ln210_fu_637_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln223_fu_664_p2 <= std_logic_vector(unsigned(pulse_sequence_count) + unsigned(ap_const_lv64_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_io)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_io)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter1, ap_block_state10_io)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_io));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter1, ap_block_state10_io)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_io));
    end process;


    ap_block_state1_assign_proc : process(ap_start, pulse_metadata_V_TVALID)
    begin
                ap_block_state1 <= ((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_io_assign_proc : process(o_data_TREADY, icmp_ln210_reg_909)
    begin
                ap_block_state10_io <= ((o_data_TREADY = ap_const_logic_0) and (icmp_ln210_reg_909 = ap_const_lv1_0));
    end process;

        ap_block_state10_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(o_data_TREADY, icmp_ln152_reg_845)
    begin
                ap_block_state3_io <= ((icmp_ln152_reg_845 = ap_const_lv1_1) and (o_data_TREADY = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(o_data_TREADY, icmp_ln152_reg_845)
    begin
                ap_block_state4_io <= ((icmp_ln152_reg_845 = ap_const_lv1_1) and (o_data_TREADY = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(o_data_TREADY, icmp_ln152_reg_845)
    begin
                ap_block_state5_io <= ((icmp_ln152_reg_845 = ap_const_lv1_1) and (o_data_TREADY = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(o_data_TREADY, p_Repl2_s_fu_537_p3)
    begin
                ap_block_state6_io <= ((p_Repl2_s_fu_537_p3 = ap_const_lv1_1) and (o_data_TREADY = ap_const_logic_0));
    end process;


    ap_block_state8_io_assign_proc : process(o_data_TREADY, p_Repl2_s_reg_859)
    begin
                ap_block_state8_io <= ((p_Repl2_s_reg_859 = ap_const_lv1_1) and (o_data_TREADY = ap_const_logic_0));
    end process;

        ap_block_state9_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln152_fu_515_p2)
    begin
        if ((icmp_ln152_fu_515_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state9_assign_proc : process(icmp_ln210_fu_637_p2)
    begin
        if ((icmp_ln210_fu_637_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_x_0_phi_fu_340_p4_assign_proc : process(icmp_ln152_reg_845, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, x_0_reg_337, x_reg_854)
    begin
        if (((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_x_0_phi_fu_340_p4 <= x_reg_854;
        else 
            ap_phi_mux_x_0_phi_fu_340_p4 <= x_0_reg_337;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_tmp_data_V_reg_358 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(p_0151_reg_477, ap_CS_fsm_state12, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_0 <= p_0151_reg_477;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_state12, or_ln226_fu_669_p2, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_1 <= or_ln226_fu_669_p2;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_CS_fsm_state12, or_ln226_1_fu_674_p2, ap_return_2_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_2 <= or_ln226_1_fu_674_p2;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(phi_ln226_3_reg_457, ap_CS_fsm_state12, ap_return_3_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_3 <= phi_ln226_3_reg_457;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(phi_ln226_1_reg_439, ap_CS_fsm_state12, ap_return_4_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_4 <= phi_ln226_1_reg_439;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(phi_ln226_reg_406, ap_CS_fsm_state12, ap_return_5_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_5 <= phi_ln226_reg_406;
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(pulse_sequence_count_2_reg_417, ap_CS_fsm_state12, ap_return_6_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_6 <= pulse_sequence_count_2_reg_417;
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(previous_gate_bit_wr_reg_426, ap_CS_fsm_state12, ap_return_7_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_7 <= previous_gate_bit_wr_reg_426;
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(phi_ln226_2_reg_448, ap_CS_fsm_state12, ap_return_8_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_8 <= phi_ln226_2_reg_448;
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(phi_ln226_4_reg_466, ap_CS_fsm_state12, ap_return_9_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return_9 <= phi_ln226_4_reg_466;
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;

    
    grp_fu_490_p4_proc : process(data_word_user_V)
    begin
        grp_fu_490_p4 <= data_word_user_V;
        grp_fu_490_p4(64) <= ap_const_lv1_1(0);
    end process;

    header_4_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_sequence_index_l_fu_609_p4),32));
    header_6_fu_622_p1 <= pulse_metadata_V_rea_reg_820(32 - 1 downto 0);
    header_8_fu_625_p1 <= pulse_sequence_count(32 - 1 downto 0);
    icmp_ln152_fu_515_p2 <= "1" when (unsigned(ap_phi_mux_x_0_phi_fu_340_p4) < unsigned(num_samples_read)) else "0";
    icmp_ln210_fu_637_p2 <= "1" when (x1_0_reg_347 = ap_const_lv5_10) else "0";

    o_data_TDATA_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln152_reg_845, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state6, p_Repl2_s_fu_537_p3, ap_CS_fsm_state7, ap_CS_fsm_state8, p_Repl2_s_reg_859, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln210_reg_909, ap_phi_reg_pp1_iter1_tmp_data_V_reg_358, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage0_01001, ap_block_pp1_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_reg_909 = ap_const_lv1_0))) then 
            o_data_TDATA <= ap_phi_reg_pp1_iter1_tmp_data_V_reg_358;
        elsif (((p_Repl2_s_reg_859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            o_data_TDATA <= ap_const_lv32_97979798;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            o_data_TDATA <= ap_const_lv32_98989797;
        elsif (((p_Repl2_s_fu_537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            o_data_TDATA <= ap_const_lv32_97989898;
        elsif (((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o_data_TDATA <= ap_const_lv32_74747475;
        elsif (((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            o_data_TDATA <= ap_const_lv32_75757474;
        elsif (((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            o_data_TDATA <= ap_const_lv32_74757575;
        else 
            o_data_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    o_data_TDATA_blk_n_assign_proc : process(o_data_TREADY, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln152_reg_845, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state6, p_Repl2_s_fu_537_p3, ap_CS_fsm_state7, ap_CS_fsm_state8, p_Repl2_s_reg_859, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln210_reg_909)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_reg_909 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((p_Repl2_s_reg_859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((p_Repl2_s_fu_537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            o_data_TDATA_blk_n <= o_data_TREADY;
        else 
            o_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    o_data_TDEST <= data_word_dest_V;
    o_data_TID <= data_word_id_V;
    o_data_TKEEP <= tmp_keep_V_reg_835;
    o_data_TLAST <= data_word_last_V;
    o_data_TSTRB <= tmp_strb_V_reg_840;

    o_data_TUSER_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln152_reg_845, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state6, p_Repl2_s_fu_537_p3, ap_CS_fsm_state7, ap_CS_fsm_state8, p_Repl2_s_reg_859, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln210_reg_909, p_Result_16_fu_520_p4, p_Result_16_reg_849, p_Result_18_fu_553_p4, p_Result_18_reg_863, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage0_01001, ap_block_pp1_stage0_01001, p_Result_21_fu_653_p4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_reg_909 = ap_const_lv1_0))) then 
            o_data_TUSER <= p_Result_21_fu_653_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or ((p_Repl2_s_reg_859 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            o_data_TUSER <= p_Result_18_reg_863;
        elsif (((p_Repl2_s_fu_537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            o_data_TUSER <= p_Result_18_fu_553_p4;
        elsif ((((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            o_data_TUSER <= p_Result_16_reg_849;
        elsif (((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            o_data_TUSER <= p_Result_16_fu_520_p4;
        else 
            o_data_TUSER <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    o_data_TVALID_assign_proc : process(o_data_TREADY, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln152_reg_845, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state6, p_Repl2_s_fu_537_p3, ap_CS_fsm_state7, ap_CS_fsm_state8, p_Repl2_s_reg_859, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln210_reg_909, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_state6_io, ap_block_state8_io, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln152_reg_845 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln210_reg_909 = ap_const_lv1_0)) or ((p_Repl2_s_reg_859 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state8_io) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((o_data_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((p_Repl2_s_fu_537_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state6_io) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            o_data_TVALID <= ap_const_logic_1;
        else 
            o_data_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln226_1_fu_674_p1 <= (0=>in_a_xfer_bundle_rea, others=>'-');
    or_ln226_1_fu_674_p2 <= (previous_gate_bit_wr_reg_426 or or_ln226_1_fu_674_p1);
    or_ln226_fu_669_p1 <= (0=>in_a_pulse_read, others=>'-');
    or_ln226_fu_669_p2 <= (previous_gate_bit_wr_reg_426 or or_ln226_fu_669_p1);
    p_Repl2_s_fu_537_p3 <= pulse_metadata_V_rea_reg_820(850 downto 850);
    
    p_Result_16_fu_520_p4_proc : process(grp_fu_490_p4)
    begin
        p_Result_16_fu_520_p4 <= grp_fu_490_p4;
        p_Result_16_fu_520_p4(72) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_17_fu_544_p4_proc : process(data_word_user_V)
    begin
        p_Result_17_fu_544_p4 <= data_word_user_V;
        p_Result_17_fu_544_p4(64) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_18_fu_553_p4_proc : process(p_Result_17_fu_544_p4)
    begin
        p_Result_18_fu_553_p4 <= p_Result_17_fu_544_p4;
        p_Result_18_fu_553_p4(72) <= ap_const_lv1_0(0);
    end process;

    p_Result_19_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_598_p3),32));
    
    p_Result_21_fu_653_p4_proc : process(grp_fu_490_p4)
    begin
        p_Result_21_fu_653_p4 <= grp_fu_490_p4;
        p_Result_21_fu_653_p4(72) <= ap_const_lv1_1(0);
    end process;


    pulse_metadata_V_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, pulse_metadata_V_TVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            pulse_metadata_V_TDATA_blk_n <= pulse_metadata_V_TVALID;
        else 
            pulse_metadata_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    pulse_metadata_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_state1, pulse_metadata_V_TVALID)
    begin
        if ((not(((pulse_metadata_V_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pulse_metadata_V_TREADY <= ap_const_logic_1;
        else 
            pulse_metadata_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    tmp_5_fu_589_p4 <= pulse_metadata_V_rea_reg_820(851 downto 848);
    tmp_6_fu_598_p3 <= (tmp_5_fu_589_p4 & flags);
    tmp_fu_499_p3 <= pulse_metadata_V_TDATA(852 downto 852);
    tmp_keep_V_fu_507_p1 <= data_word_keep_V(4 - 1 downto 0);
    tmp_sequence_index_l_fu_609_p4 <= pulse_metadata_V_rea_reg_820(807 downto 800);
    tmp_strb_V_fu_511_p1 <= data_word_strb_V(4 - 1 downto 0);
    trunc_ln214_fu_649_p1 <= x1_0_reg_347(4 - 1 downto 0);
    x_1_fu_643_p2 <= std_logic_vector(unsigned(x1_0_reg_347) + unsigned(ap_const_lv5_1));
    x_fu_531_p2 <= std_logic_vector(unsigned(x_0_reg_337) + unsigned(ap_const_lv32_1));
end behav;
