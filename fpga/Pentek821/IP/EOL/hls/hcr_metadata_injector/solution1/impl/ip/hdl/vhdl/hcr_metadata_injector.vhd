-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hcr_metadata_injector is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    i_data_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    i_data_TVALID : IN STD_LOGIC;
    i_data_TREADY : OUT STD_LOGIC;
    i_data_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    i_data_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    i_data_TUSER : IN STD_LOGIC_VECTOR (127 downto 0);
    i_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    i_data_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    i_data_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    o_data_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_data_TVALID : OUT STD_LOGIC;
    o_data_TREADY : IN STD_LOGIC;
    o_data_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    o_data_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    o_data_TUSER : OUT STD_LOGIC_VECTOR (127 downto 0);
    o_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    o_data_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    o_data_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    pulse_metadata_V_TDATA : IN STD_LOGIC_VECTOR (855 downto 0);
    pulse_metadata_V_TVALID : IN STD_LOGIC;
    pulse_metadata_V_TREADY : OUT STD_LOGIC;
    pos_enc_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pos_enc_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    flags : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of hcr_metadata_injector is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hcr_metadata_injector,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku060-ffva1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.745000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2446,HLS_SYN_LUT=1381,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal o_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal or_ln55_reg_723 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal or_ln55_reg_723_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_reg_738_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal previous_gate_bit_1_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal decimation_counter_120_reg_303 : STD_LOGIC_VECTOR (7 downto 0);
    signal sample_counter_119_reg_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_a_xfer_bundle_1_reg_325 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_a_pulse_1_reg_336 : STD_LOGIC_VECTOR (0 downto 0);
    signal decimation_counter_2_reg_347 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_2_reg_678 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op98_write_state5 : BOOLEAN;
    signal ap_predicate_op100_write_state5 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_keep_V_2_reg_685 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_strb_V_2_reg_692 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_2_reg_699 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_last_V_reg_705 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_reg_717 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln61_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln61_reg_727 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_reg_732 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal decimation_counter_1_fu_519_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln86_fu_531_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_reg_747 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_10_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_reg_752 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln61_1_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln61_1_reg_757 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_predicate_op93_write_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_predicate_op101_write_state6 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal p_Result_7_fu_564_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_7_reg_762 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_data_V_fu_574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_fu_578_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_fu_582_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_8_fu_586_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_data_V_1_reg_787 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_1_reg_792 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_1_reg_797 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_fu_626_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal pos_enc_0_read_reg_807 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal pos_enc_1_read_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal flags_read_reg_817 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_handle_header_fu_360_ap_ready : STD_LOGIC;
    signal grp_handle_header_fu_360_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_handle_header_fu_360_ap_start : STD_LOGIC;
    signal grp_handle_header_fu_360_ap_idle : STD_LOGIC;
    signal grp_handle_header_fu_360_pulse_metadata_V_TREADY : STD_LOGIC;
    signal grp_handle_header_fu_360_in_a_pulse_read : STD_LOGIC;
    signal grp_handle_header_fu_360_in_a_xfer_bundle_rea : STD_LOGIC;
    signal grp_handle_header_fu_360_break_after_pulse_re : STD_LOGIC;
    signal grp_handle_header_fu_360_o_data_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_handle_header_fu_360_o_data_TVALID : STD_LOGIC;
    signal grp_handle_header_fu_360_o_data_TREADY : STD_LOGIC;
    signal grp_handle_header_fu_360_o_data_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_handle_header_fu_360_o_data_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_handle_header_fu_360_o_data_TUSER : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_handle_header_fu_360_o_data_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_handle_header_fu_360_o_data_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_handle_header_fu_360_o_data_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_handle_header_fu_360_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_handle_header_fu_360_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_handle_header_fu_360_ap_return_2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_handle_header_fu_360_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_handle_header_fu_360_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_handle_header_fu_360_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_handle_header_fu_360_ap_return_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_handle_header_fu_360_ap_return_7 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_handle_header_fu_360_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_handle_header_fu_360_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal previous_gate_bit_0_reg_185 : STD_LOGIC_VECTOR (0 downto 0);
    signal terminate_fu_666_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal pulse_sequence_count_reg_197 : STD_LOGIC_VECTOR (63 downto 0);
    signal decimation_counter_0_reg_209 : STD_LOGIC_VECTOR (7 downto 0);
    signal sample_counter_0_reg_221 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_samples_0_reg_233 : STD_LOGIC_VECTOR (31 downto 0);
    signal break_after_pulse_0_reg_245 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_a_xfer_bundle_0_reg_257 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_a_pulse_0_reg_269 : STD_LOGIC_VECTOR (0 downto 0);
    signal decimation_value_0_reg_281 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_previous_gate_bit_1_phi_fu_296_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_decimation_counter_120_phi_fu_306_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_sample_counter_119_phi_fu_317_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_in_a_xfer_bundle_1_phi_fu_328_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_in_a_pulse_1_phi_fu_339_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_decimation_counter_2_reg_347 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_handle_header_fu_360_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_2_fu_437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln_fu_445_p3 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Result_s_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln61_1_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dec_keep_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln73_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln73_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln73_1_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sample_counter_1_fu_525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln61_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_556_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal regslice_both_o_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_i_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal i_data_TDATA_int : STD_LOGIC_VECTOR (63 downto 0);
    signal i_data_TVALID_int : STD_LOGIC;
    signal i_data_TREADY_int : STD_LOGIC;
    signal regslice_both_i_data_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_i_data_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal i_data_TKEEP_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_i_data_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_data_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_i_data_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal i_data_TSTRB_int : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_i_data_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_data_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_i_data_V_user_V_U_apdone_blk : STD_LOGIC;
    signal i_data_TUSER_int : STD_LOGIC_VECTOR (127 downto 0);
    signal regslice_both_i_data_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_data_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_i_data_V_last_V_U_apdone_blk : STD_LOGIC;
    signal i_data_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_i_data_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_data_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_i_data_V_id_V_U_apdone_blk : STD_LOGIC;
    signal i_data_TID_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_i_data_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_data_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_i_data_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal i_data_TDEST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_i_data_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_i_data_V_dest_V_U_ack_in : STD_LOGIC;
    signal o_data_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_TVALID_int : STD_LOGIC;
    signal o_data_TREADY_int : STD_LOGIC;
    signal regslice_both_o_data_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_o_data_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal o_data_TKEEP_int : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_o_data_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_o_data_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_o_data_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal o_data_TSTRB_int : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_o_data_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_o_data_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_o_data_V_user_V_U_apdone_blk : STD_LOGIC;
    signal o_data_TUSER_int : STD_LOGIC_VECTOR (127 downto 0);
    signal regslice_both_o_data_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_o_data_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_o_data_V_last_V_U_apdone_blk : STD_LOGIC;
    signal o_data_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_o_data_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_o_data_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_o_data_V_id_V_U_apdone_blk : STD_LOGIC;
    signal o_data_TID_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_o_data_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_o_data_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_o_data_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal o_data_TDEST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_o_data_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_o_data_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_pulse_metadata_V_U_apdone_blk : STD_LOGIC;
    signal pulse_metadata_V_TDATA_int : STD_LOGIC_VECTOR (855 downto 0);
    signal pulse_metadata_V_TVALID_int : STD_LOGIC;
    signal pulse_metadata_V_TREADY_int : STD_LOGIC;
    signal regslice_both_pulse_metadata_V_U_ack_in : STD_LOGIC;
    signal ap_condition_161 : BOOLEAN;

    component handle_header IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pulse_metadata_V_TDATA : IN STD_LOGIC_VECTOR (855 downto 0);
        pulse_metadata_V_TVALID : IN STD_LOGIC;
        pulse_metadata_V_TREADY : OUT STD_LOGIC;
        data_word_data_V : IN STD_LOGIC_VECTOR (63 downto 0);
        data_word_keep_V : IN STD_LOGIC_VECTOR (7 downto 0);
        data_word_strb_V : IN STD_LOGIC_VECTOR (7 downto 0);
        data_word_user_V : IN STD_LOGIC_VECTOR (127 downto 0);
        data_word_last_V : IN STD_LOGIC_VECTOR (0 downto 0);
        data_word_id_V : IN STD_LOGIC_VECTOR (0 downto 0);
        data_word_dest_V : IN STD_LOGIC_VECTOR (0 downto 0);
        in_a_pulse_read : IN STD_LOGIC;
        in_a_xfer_bundle_rea : IN STD_LOGIC;
        break_after_pulse_re : IN STD_LOGIC;
        num_samples_read : IN STD_LOGIC_VECTOR (31 downto 0);
        sample_counter_read : IN STD_LOGIC_VECTOR (31 downto 0);
        decimation_value_rea : IN STD_LOGIC_VECTOR (7 downto 0);
        decimation_counter_r : IN STD_LOGIC_VECTOR (7 downto 0);
        pulse_sequence_count : IN STD_LOGIC_VECTOR (63 downto 0);
        o_data_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        o_data_TVALID : OUT STD_LOGIC;
        o_data_TREADY : IN STD_LOGIC;
        o_data_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        o_data_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        o_data_TUSER : OUT STD_LOGIC_VECTOR (127 downto 0);
        o_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        o_data_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        o_data_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        pos_enc_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pos_enc_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flags : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_handle_header_fu_360 : component handle_header
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_handle_header_fu_360_ap_start,
        ap_done => grp_handle_header_fu_360_ap_done,
        ap_idle => grp_handle_header_fu_360_ap_idle,
        ap_ready => grp_handle_header_fu_360_ap_ready,
        pulse_metadata_V_TDATA => pulse_metadata_V_TDATA_int,
        pulse_metadata_V_TVALID => pulse_metadata_V_TVALID_int,
        pulse_metadata_V_TREADY => grp_handle_header_fu_360_pulse_metadata_V_TREADY,
        data_word_data_V => tmp_data_V_2_reg_678,
        data_word_keep_V => tmp_keep_V_2_reg_685,
        data_word_strb_V => tmp_strb_V_2_reg_692,
        data_word_user_V => tmp_user_V_2_reg_699,
        data_word_last_V => tmp_last_V_reg_705,
        data_word_id_V => tmp_id_V_reg_711,
        data_word_dest_V => tmp_dest_V_reg_717,
        in_a_pulse_read => grp_handle_header_fu_360_in_a_pulse_read,
        in_a_xfer_bundle_rea => grp_handle_header_fu_360_in_a_xfer_bundle_rea,
        break_after_pulse_re => grp_handle_header_fu_360_break_after_pulse_re,
        num_samples_read => num_samples_0_reg_233,
        sample_counter_read => sample_counter_119_reg_314,
        decimation_value_rea => decimation_value_0_reg_281,
        decimation_counter_r => decimation_counter_120_reg_303,
        pulse_sequence_count => pulse_sequence_count_reg_197,
        o_data_TDATA => grp_handle_header_fu_360_o_data_TDATA,
        o_data_TVALID => grp_handle_header_fu_360_o_data_TVALID,
        o_data_TREADY => grp_handle_header_fu_360_o_data_TREADY,
        o_data_TKEEP => grp_handle_header_fu_360_o_data_TKEEP,
        o_data_TSTRB => grp_handle_header_fu_360_o_data_TSTRB,
        o_data_TUSER => grp_handle_header_fu_360_o_data_TUSER,
        o_data_TLAST => grp_handle_header_fu_360_o_data_TLAST,
        o_data_TID => grp_handle_header_fu_360_o_data_TID,
        o_data_TDEST => grp_handle_header_fu_360_o_data_TDEST,
        pos_enc_0 => pos_enc_0_read_reg_807,
        pos_enc_1 => pos_enc_1_read_reg_812,
        flags => flags_read_reg_817,
        ap_return_0 => grp_handle_header_fu_360_ap_return_0,
        ap_return_1 => grp_handle_header_fu_360_ap_return_1,
        ap_return_2 => grp_handle_header_fu_360_ap_return_2,
        ap_return_3 => grp_handle_header_fu_360_ap_return_3,
        ap_return_4 => grp_handle_header_fu_360_ap_return_4,
        ap_return_5 => grp_handle_header_fu_360_ap_return_5,
        ap_return_6 => grp_handle_header_fu_360_ap_return_6,
        ap_return_7 => grp_handle_header_fu_360_ap_return_7,
        ap_return_8 => grp_handle_header_fu_360_ap_return_8,
        ap_return_9 => grp_handle_header_fu_360_ap_return_9);

    regslice_both_i_data_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => i_data_TDATA,
        vld_in => i_data_TVALID,
        ack_in => regslice_both_i_data_V_data_V_U_ack_in,
        data_out => i_data_TDATA_int,
        vld_out => i_data_TVALID_int,
        ack_out => i_data_TREADY_int,
        apdone_blk => regslice_both_i_data_V_data_V_U_apdone_blk);

    regslice_both_i_data_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => i_data_TKEEP,
        vld_in => i_data_TVALID,
        ack_in => regslice_both_i_data_V_keep_V_U_ack_in,
        data_out => i_data_TKEEP_int,
        vld_out => regslice_both_i_data_V_keep_V_U_vld_out,
        ack_out => i_data_TREADY_int,
        apdone_blk => regslice_both_i_data_V_keep_V_U_apdone_blk);

    regslice_both_i_data_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => i_data_TSTRB,
        vld_in => i_data_TVALID,
        ack_in => regslice_both_i_data_V_strb_V_U_ack_in,
        data_out => i_data_TSTRB_int,
        vld_out => regslice_both_i_data_V_strb_V_U_vld_out,
        ack_out => i_data_TREADY_int,
        apdone_blk => regslice_both_i_data_V_strb_V_U_apdone_blk);

    regslice_both_i_data_V_user_V_U : component regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => i_data_TUSER,
        vld_in => i_data_TVALID,
        ack_in => regslice_both_i_data_V_user_V_U_ack_in,
        data_out => i_data_TUSER_int,
        vld_out => regslice_both_i_data_V_user_V_U_vld_out,
        ack_out => i_data_TREADY_int,
        apdone_blk => regslice_both_i_data_V_user_V_U_apdone_blk);

    regslice_both_i_data_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => i_data_TLAST,
        vld_in => i_data_TVALID,
        ack_in => regslice_both_i_data_V_last_V_U_ack_in,
        data_out => i_data_TLAST_int,
        vld_out => regslice_both_i_data_V_last_V_U_vld_out,
        ack_out => i_data_TREADY_int,
        apdone_blk => regslice_both_i_data_V_last_V_U_apdone_blk);

    regslice_both_i_data_V_id_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => i_data_TID,
        vld_in => i_data_TVALID,
        ack_in => regslice_both_i_data_V_id_V_U_ack_in,
        data_out => i_data_TID_int,
        vld_out => regslice_both_i_data_V_id_V_U_vld_out,
        ack_out => i_data_TREADY_int,
        apdone_blk => regslice_both_i_data_V_id_V_U_apdone_blk);

    regslice_both_i_data_V_dest_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => i_data_TDEST,
        vld_in => i_data_TVALID,
        ack_in => regslice_both_i_data_V_dest_V_U_ack_in,
        data_out => i_data_TDEST_int,
        vld_out => regslice_both_i_data_V_dest_V_U_vld_out,
        ack_out => i_data_TREADY_int,
        apdone_blk => regslice_both_i_data_V_dest_V_U_apdone_blk);

    regslice_both_o_data_V_data_V_U : component regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => o_data_TDATA_int,
        vld_in => o_data_TVALID_int,
        ack_in => o_data_TREADY_int,
        data_out => o_data_TDATA,
        vld_out => regslice_both_o_data_V_data_V_U_vld_out,
        ack_out => o_data_TREADY,
        apdone_blk => regslice_both_o_data_V_data_V_U_apdone_blk);

    regslice_both_o_data_V_keep_V_U : component regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => o_data_TKEEP_int,
        vld_in => o_data_TVALID_int,
        ack_in => regslice_both_o_data_V_keep_V_U_ack_in_dummy,
        data_out => o_data_TKEEP,
        vld_out => regslice_both_o_data_V_keep_V_U_vld_out,
        ack_out => o_data_TREADY,
        apdone_blk => regslice_both_o_data_V_keep_V_U_apdone_blk);

    regslice_both_o_data_V_strb_V_U : component regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => o_data_TSTRB_int,
        vld_in => o_data_TVALID_int,
        ack_in => regslice_both_o_data_V_strb_V_U_ack_in_dummy,
        data_out => o_data_TSTRB,
        vld_out => regslice_both_o_data_V_strb_V_U_vld_out,
        ack_out => o_data_TREADY,
        apdone_blk => regslice_both_o_data_V_strb_V_U_apdone_blk);

    regslice_both_o_data_V_user_V_U : component regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => o_data_TUSER_int,
        vld_in => o_data_TVALID_int,
        ack_in => regslice_both_o_data_V_user_V_U_ack_in_dummy,
        data_out => o_data_TUSER,
        vld_out => regslice_both_o_data_V_user_V_U_vld_out,
        ack_out => o_data_TREADY,
        apdone_blk => regslice_both_o_data_V_user_V_U_apdone_blk);

    regslice_both_o_data_V_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => o_data_TLAST_int,
        vld_in => o_data_TVALID_int,
        ack_in => regslice_both_o_data_V_last_V_U_ack_in_dummy,
        data_out => o_data_TLAST,
        vld_out => regslice_both_o_data_V_last_V_U_vld_out,
        ack_out => o_data_TREADY,
        apdone_blk => regslice_both_o_data_V_last_V_U_apdone_blk);

    regslice_both_o_data_V_id_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => o_data_TID_int,
        vld_in => o_data_TVALID_int,
        ack_in => regslice_both_o_data_V_id_V_U_ack_in_dummy,
        data_out => o_data_TID,
        vld_out => regslice_both_o_data_V_id_V_U_vld_out,
        ack_out => o_data_TREADY,
        apdone_blk => regslice_both_o_data_V_id_V_U_apdone_blk);

    regslice_both_o_data_V_dest_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => o_data_TDEST_int,
        vld_in => o_data_TVALID_int,
        ack_in => regslice_both_o_data_V_dest_V_U_ack_in_dummy,
        data_out => o_data_TDEST,
        vld_out => regslice_both_o_data_V_dest_V_U_vld_out,
        ack_out => o_data_TREADY,
        apdone_blk => regslice_both_o_data_V_dest_V_U_apdone_blk);

    regslice_both_pulse_metadata_V_U : component regslice_both
    generic map (
        DataWidth => 856)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => pulse_metadata_V_TDATA,
        vld_in => pulse_metadata_V_TVALID,
        ack_in => regslice_both_pulse_metadata_V_U_ack_in,
        data_out => pulse_metadata_V_TDATA_int,
        vld_out => pulse_metadata_V_TVALID_int,
        ack_out => pulse_metadata_V_TREADY_int,
        apdone_blk => regslice_both_pulse_metadata_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_handle_header_fu_360_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_handle_header_fu_360_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_handle_header_fu_360_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_handle_header_fu_360_ap_ready = ap_const_logic_1)) then 
                    grp_handle_header_fu_360_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_decimation_counter_2_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_161)) then
                if ((or_ln73_fu_513_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_decimation_counter_2_reg_347 <= decimation_counter_1_fu_519_p2;
                elsif ((or_ln73_fu_513_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_decimation_counter_2_reg_347 <= ap_const_lv8_1;
                end if;
            end if; 
        end if;
    end process;

    break_after_pulse_0_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                break_after_pulse_0_reg_245 <= grp_handle_header_fu_360_ap_return_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                break_after_pulse_0_reg_245 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    decimation_counter_0_reg_209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                decimation_counter_0_reg_209 <= grp_handle_header_fu_360_ap_return_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                decimation_counter_0_reg_209 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    decimation_counter_120_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                decimation_counter_120_reg_303 <= decimation_counter_2_reg_347;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                decimation_counter_120_reg_303 <= decimation_counter_0_reg_209;
            end if; 
        end if;
    end process;

    decimation_value_0_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                decimation_value_0_reg_281 <= grp_handle_header_fu_360_ap_return_4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                decimation_value_0_reg_281 <= ap_const_lv8_1;
            end if; 
        end if;
    end process;

    in_a_pulse_0_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                in_a_pulse_0_reg_269 <= grp_handle_header_fu_360_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                in_a_pulse_0_reg_269 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    in_a_pulse_1_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                in_a_pulse_1_reg_336 <= p_Repl2_s_reg_732;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                in_a_pulse_1_reg_336 <= in_a_pulse_0_reg_269;
            end if; 
        end if;
    end process;

    in_a_xfer_bundle_0_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                in_a_xfer_bundle_0_reg_257 <= grp_handle_header_fu_360_ap_return_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                in_a_xfer_bundle_0_reg_257 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    in_a_xfer_bundle_1_reg_325_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                in_a_xfer_bundle_1_reg_325 <= and_ln61_1_reg_757;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                in_a_xfer_bundle_1_reg_325 <= in_a_xfer_bundle_0_reg_257;
            end if; 
        end if;
    end process;

    num_samples_0_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                num_samples_0_reg_233 <= grp_handle_header_fu_360_ap_return_8;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                num_samples_0_reg_233 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    previous_gate_bit_0_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                previous_gate_bit_0_reg_185 <= grp_handle_header_fu_360_ap_return_7;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                previous_gate_bit_0_reg_185 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    previous_gate_bit_1_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                previous_gate_bit_1_reg_293 <= p_Result_10_reg_752;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                previous_gate_bit_1_reg_293 <= previous_gate_bit_0_reg_185;
            end if; 
        end if;
    end process;

    pulse_sequence_count_reg_197_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                pulse_sequence_count_reg_197 <= grp_handle_header_fu_360_ap_return_6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                pulse_sequence_count_reg_197 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    sample_counter_0_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then 
                sample_counter_0_reg_221 <= grp_handle_header_fu_360_ap_return_9;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                sample_counter_0_reg_221 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    sample_counter_119_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                sample_counter_119_reg_314 <= select_ln86_reg_747;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                sample_counter_119_reg_314 <= sample_counter_0_reg_221;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                and_ln61_1_reg_757 <= and_ln61_1_fu_550_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_fu_459_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln61_reg_727 <= and_ln61_fu_471_p2;
                or_ln73_reg_738 <= or_ln73_fu_513_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                decimation_counter_2_reg_347 <= ap_phi_reg_pp0_iter0_decimation_counter_2_reg_347;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                flags_read_reg_817 <= flags;
                pos_enc_0_read_reg_807 <= pos_enc_0;
                pos_enc_1_read_reg_812 <= pos_enc_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_ln55_reg_723 <= or_ln55_fu_459_p2;
                or_ln55_reg_723_pp0_iter1_reg <= or_ln55_reg_723;
                or_ln73_reg_738_pp0_iter1_reg <= or_ln73_reg_738;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln55_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Repl2_s_reg_732 <= p_Repl2_s_fu_483_p2;
                p_Result_10_reg_752 <= p_Result_10_fu_539_p2;
                select_ln86_reg_747 <= select_ln86_fu_531_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln73_reg_738 = ap_const_lv1_1) and (or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                p_Result_7_reg_762 <= p_Result_7_fu_564_p4;
                tmp_data_V_1_reg_787 <= tmp_data_V_2_reg_678(63 downto 32);
                tmp_keep_V_1_reg_792 <= tmp_keep_V_2_reg_685(7 downto 4);
                tmp_strb_V_1_reg_797 <= tmp_strb_V_2_reg_692(7 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_V_2_reg_678 <= i_data_TDATA_int;
                tmp_dest_V_reg_717 <= i_data_TDEST_int;
                tmp_id_V_reg_711 <= i_data_TID_int;
                tmp_keep_V_2_reg_685 <= i_data_TKEEP_int;
                tmp_last_V_reg_705 <= i_data_TLAST_int;
                tmp_strb_V_2_reg_692 <= i_data_TSTRB_int;
                tmp_user_V_2_reg_699 <= i_data_TUSER_int;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, or_ln55_fu_459_p2, ap_CS_fsm_state8, grp_handle_header_fu_360_ap_done, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, terminate_fu_666_p1, ap_CS_fsm_state9, regslice_both_o_data_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln55_fu_459_p2 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln55_fu_459_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((terminate_fu_666_p1 = ap_const_lv1_1) and (grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((grp_handle_header_fu_360_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (terminate_fu_666_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((regslice_both_o_data_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    and_ln61_1_fu_550_p2 <= (xor_ln61_fu_545_p2 and in_a_xfer_bundle_1_reg_325);
    and_ln61_fu_471_p2 <= (icmp_ln61_fu_465_p2 and break_after_pulse_0_reg_245);
    and_ln73_fu_495_p2 <= (p_Repl2_s_fu_483_p2 and dec_keep_fu_489_p2);
    and_ln_fu_445_p3 <= (tmp_2_fu_437_p3 & ap_const_lv64_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, i_data_TVALID_int)
    begin
                ap_block_pp0_stage0_01001 <= ((i_data_TVALID_int = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state5_io, i_data_TVALID_int)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((i_data_TVALID_int = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state5_io, i_data_TVALID_int)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((i_data_TVALID_int = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state4_io, ap_block_state6_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_const_boolean_1 = ap_block_state6_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state4_io, ap_block_state6_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_const_boolean_1 = ap_block_state6_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state3_pp0_stage0_iter0_assign_proc : process(i_data_TVALID_int)
    begin
                ap_block_state3_pp0_stage0_iter0 <= (i_data_TVALID_int = ap_const_logic_0);
    end process;


    ap_block_state4_io_assign_proc : process(ap_predicate_op93_write_state4, o_data_TREADY_int)
    begin
                ap_block_state4_io <= ((o_data_TREADY_int = ap_const_logic_0) and (ap_predicate_op93_write_state4 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(ap_predicate_op98_write_state5, ap_predicate_op100_write_state5, o_data_TREADY_int)
    begin
                ap_block_state5_io <= (((o_data_TREADY_int = ap_const_logic_0) and (ap_predicate_op100_write_state5 = ap_const_boolean_1)) or ((o_data_TREADY_int = ap_const_logic_0) and (ap_predicate_op98_write_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(ap_predicate_op101_write_state6, o_data_TREADY_int)
    begin
                ap_block_state6_io <= ((o_data_TREADY_int = ap_const_logic_0) and (ap_predicate_op101_write_state6 = ap_const_boolean_1));
    end process;

        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_161_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, or_ln55_fu_459_p2)
    begin
                ap_condition_161 <= ((or_ln55_fu_459_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(or_ln55_fu_459_p2)
    begin
        if ((or_ln55_fu_459_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state9, regslice_both_o_data_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_o_data_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_decimation_counter_120_phi_fu_306_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, or_ln55_reg_723, ap_enable_reg_pp0_iter1, decimation_counter_120_reg_303, decimation_counter_2_reg_347)
    begin
        if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_decimation_counter_120_phi_fu_306_p4 <= decimation_counter_2_reg_347;
        else 
            ap_phi_mux_decimation_counter_120_phi_fu_306_p4 <= decimation_counter_120_reg_303;
        end if; 
    end process;


    ap_phi_mux_in_a_pulse_1_phi_fu_339_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, or_ln55_reg_723, ap_enable_reg_pp0_iter1, in_a_pulse_1_reg_336, p_Repl2_s_reg_732)
    begin
        if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_in_a_pulse_1_phi_fu_339_p4 <= p_Repl2_s_reg_732;
        else 
            ap_phi_mux_in_a_pulse_1_phi_fu_339_p4 <= in_a_pulse_1_reg_336;
        end if; 
    end process;


    ap_phi_mux_in_a_xfer_bundle_1_phi_fu_328_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, or_ln55_reg_723, ap_enable_reg_pp0_iter1, in_a_xfer_bundle_1_reg_325, and_ln61_1_reg_757)
    begin
        if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_in_a_xfer_bundle_1_phi_fu_328_p4 <= and_ln61_1_reg_757;
        else 
            ap_phi_mux_in_a_xfer_bundle_1_phi_fu_328_p4 <= in_a_xfer_bundle_1_reg_325;
        end if; 
    end process;


    ap_phi_mux_previous_gate_bit_1_phi_fu_296_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, or_ln55_reg_723, ap_enable_reg_pp0_iter1, previous_gate_bit_1_reg_293, p_Result_10_reg_752)
    begin
        if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_previous_gate_bit_1_phi_fu_296_p4 <= p_Result_10_reg_752;
        else 
            ap_phi_mux_previous_gate_bit_1_phi_fu_296_p4 <= previous_gate_bit_1_reg_293;
        end if; 
    end process;


    ap_phi_mux_sample_counter_119_phi_fu_317_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, or_ln55_reg_723, ap_enable_reg_pp0_iter1, sample_counter_119_reg_314, select_ln86_reg_747)
    begin
        if (((or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_sample_counter_119_phi_fu_317_p4 <= select_ln86_reg_747;
        else 
            ap_phi_mux_sample_counter_119_phi_fu_317_p4 <= sample_counter_119_reg_314;
        end if; 
    end process;


    ap_predicate_op100_write_state5_assign_proc : process(or_ln55_reg_723, or_ln73_reg_738)
    begin
                ap_predicate_op100_write_state5 <= ((or_ln73_reg_738 = ap_const_lv1_1) and (or_ln55_reg_723 = ap_const_lv1_1));
    end process;


    ap_predicate_op101_write_state6_assign_proc : process(or_ln55_reg_723_pp0_iter1_reg, or_ln73_reg_738_pp0_iter1_reg)
    begin
                ap_predicate_op101_write_state6 <= ((or_ln73_reg_738_pp0_iter1_reg = ap_const_lv1_1) and (or_ln55_reg_723_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op93_write_state4_assign_proc : process(or_ln55_reg_723, or_ln73_reg_738)
    begin
                ap_predicate_op93_write_state4 <= ((or_ln73_reg_738 = ap_const_lv1_1) and (or_ln55_reg_723 = ap_const_lv1_1));
    end process;


    ap_predicate_op98_write_state5_assign_proc : process(or_ln55_reg_723, or_ln73_reg_738)
    begin
                ap_predicate_op98_write_state5 <= ((or_ln73_reg_738 = ap_const_lv1_1) and (or_ln55_reg_723 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9, regslice_both_o_data_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_o_data_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    dec_keep_fu_489_p2 <= "1" when (ap_phi_mux_decimation_counter_120_phi_fu_306_p4 = decimation_value_0_reg_281) else "0";
    decimation_counter_1_fu_519_p2 <= std_logic_vector(unsigned(ap_phi_mux_decimation_counter_120_phi_fu_306_p4) + unsigned(ap_const_lv8_1));
    grp_handle_header_fu_360_ap_start <= grp_handle_header_fu_360_ap_start_reg;
    grp_handle_header_fu_360_break_after_pulse_re <= break_after_pulse_0_reg_245(0);
    grp_handle_header_fu_360_in_a_pulse_read <= in_a_pulse_1_reg_336(0);
    grp_handle_header_fu_360_in_a_xfer_bundle_rea <= in_a_xfer_bundle_1_reg_325(0);
    grp_handle_header_fu_360_o_data_TREADY <= (o_data_TREADY_int and ap_CS_fsm_state8);

    i_data_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, i_data_TVALID_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_TDATA_blk_n <= i_data_TVALID_int;
        else 
            i_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_data_TREADY_assign_proc : process(i_data_TVALID, regslice_both_i_data_V_data_V_U_ack_in)
    begin
        if (((regslice_both_i_data_V_data_V_U_ack_in = ap_const_logic_1) and (i_data_TVALID = ap_const_logic_1))) then 
            i_data_TREADY <= ap_const_logic_1;
        else 
            i_data_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    i_data_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            i_data_TREADY_int <= ap_const_logic_1;
        else 
            i_data_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln61_fu_465_p2 <= "1" when (ap_phi_mux_sample_counter_119_phi_fu_317_p4 = num_samples_0_reg_233) else "0";

    o_data_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, or_ln55_reg_723, or_ln73_reg_738, ap_enable_reg_pp0_iter1, or_ln55_reg_723_pp0_iter1_reg, or_ln73_reg_738_pp0_iter1_reg, o_data_TREADY_int)
    begin
        if ((((or_ln73_reg_738_pp0_iter1_reg = ap_const_lv1_1) and (or_ln55_reg_723_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((or_ln73_reg_738 = ap_const_lv1_1) and (or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((or_ln73_reg_738 = ap_const_lv1_1) and (or_ln55_reg_723 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            o_data_TDATA_blk_n <= o_data_TREADY_int;
        else 
            o_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    o_data_TDATA_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_predicate_op100_write_state5, ap_predicate_op93_write_state4, tmp_data_V_fu_574_p1, tmp_data_V_1_reg_787, ap_CS_fsm_state8, grp_handle_header_fu_360_o_data_TDATA, grp_handle_header_fu_360_o_data_TVALID, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op100_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o_data_TDATA_int <= tmp_data_V_1_reg_787;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op93_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            o_data_TDATA_int <= tmp_data_V_fu_574_p1;
        elsif (((grp_handle_header_fu_360_o_data_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            o_data_TDATA_int <= grp_handle_header_fu_360_o_data_TDATA;
        else 
            o_data_TDATA_int <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    o_data_TDEST_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_predicate_op100_write_state5, tmp_dest_V_reg_717, ap_predicate_op93_write_state4, ap_CS_fsm_state8, grp_handle_header_fu_360_o_data_TVALID, grp_handle_header_fu_360_o_data_TDEST, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op93_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op100_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            o_data_TDEST_int <= tmp_dest_V_reg_717;
        elsif (((grp_handle_header_fu_360_o_data_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            o_data_TDEST_int <= grp_handle_header_fu_360_o_data_TDEST;
        else 
            o_data_TDEST_int <= "X";
        end if; 
    end process;


    o_data_TID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_predicate_op100_write_state5, tmp_id_V_reg_711, ap_predicate_op93_write_state4, ap_CS_fsm_state8, grp_handle_header_fu_360_o_data_TVALID, grp_handle_header_fu_360_o_data_TID, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op93_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op100_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            o_data_TID_int <= tmp_id_V_reg_711;
        elsif (((grp_handle_header_fu_360_o_data_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            o_data_TID_int <= grp_handle_header_fu_360_o_data_TID;
        else 
            o_data_TID_int <= "X";
        end if; 
    end process;


    o_data_TKEEP_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_predicate_op100_write_state5, ap_predicate_op93_write_state4, tmp_keep_V_fu_578_p1, tmp_keep_V_1_reg_792, ap_CS_fsm_state8, grp_handle_header_fu_360_o_data_TVALID, grp_handle_header_fu_360_o_data_TKEEP, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op100_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o_data_TKEEP_int <= tmp_keep_V_1_reg_792;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op93_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            o_data_TKEEP_int <= tmp_keep_V_fu_578_p1;
        elsif (((grp_handle_header_fu_360_o_data_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            o_data_TKEEP_int <= grp_handle_header_fu_360_o_data_TKEEP;
        else 
            o_data_TKEEP_int <= "XXXX";
        end if; 
    end process;


    o_data_TLAST_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_predicate_op100_write_state5, tmp_last_V_reg_705, ap_predicate_op93_write_state4, ap_CS_fsm_state8, grp_handle_header_fu_360_o_data_TVALID, grp_handle_header_fu_360_o_data_TLAST, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op93_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op100_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            o_data_TLAST_int <= tmp_last_V_reg_705;
        elsif (((grp_handle_header_fu_360_o_data_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            o_data_TLAST_int <= grp_handle_header_fu_360_o_data_TLAST;
        else 
            o_data_TLAST_int <= "X";
        end if; 
    end process;


    o_data_TSTRB_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_predicate_op100_write_state5, ap_predicate_op93_write_state4, tmp_strb_V_fu_582_p1, tmp_strb_V_1_reg_797, ap_CS_fsm_state8, grp_handle_header_fu_360_o_data_TVALID, grp_handle_header_fu_360_o_data_TSTRB, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op100_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o_data_TSTRB_int <= tmp_strb_V_1_reg_797;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op93_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            o_data_TSTRB_int <= tmp_strb_V_fu_582_p1;
        elsif (((grp_handle_header_fu_360_o_data_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            o_data_TSTRB_int <= grp_handle_header_fu_360_o_data_TSTRB;
        else 
            o_data_TSTRB_int <= "XXXX";
        end if; 
    end process;


    o_data_TUSER_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_predicate_op100_write_state5, ap_predicate_op93_write_state4, p_Result_8_fu_586_p5, p_Result_9_fu_626_p5, ap_CS_fsm_state8, grp_handle_header_fu_360_o_data_TVALID, grp_handle_header_fu_360_o_data_TUSER, ap_block_pp0_stage1_01001, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op100_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o_data_TUSER_int <= p_Result_9_fu_626_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op93_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            o_data_TUSER_int <= p_Result_8_fu_586_p5;
        elsif (((grp_handle_header_fu_360_o_data_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            o_data_TUSER_int <= grp_handle_header_fu_360_o_data_TUSER;
        else 
            o_data_TUSER_int <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    o_data_TVALID <= regslice_both_o_data_V_data_V_U_vld_out;

    o_data_TVALID_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_predicate_op100_write_state5, ap_block_pp0_stage0_11001, ap_predicate_op93_write_state4, ap_block_pp0_stage1_11001, ap_CS_fsm_state8, grp_handle_header_fu_360_o_data_TVALID)
    begin
        if ((((ap_predicate_op93_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_predicate_op100_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            o_data_TVALID_int <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            o_data_TVALID_int <= grp_handle_header_fu_360_o_data_TVALID;
        else 
            o_data_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    or_ln55_fu_459_p2 <= (p_Result_s_fu_453_p2 or ap_phi_mux_previous_gate_bit_1_phi_fu_296_p4);
    or_ln73_1_fu_507_p2 <= (xor_ln73_fu_501_p2 or and_ln73_fu_495_p2);
    or_ln73_fu_513_p2 <= (or_ln73_1_fu_507_p2 or and_ln61_fu_471_p2);
    p_Repl2_s_fu_483_p2 <= (xor_ln61_1_fu_477_p2 and ap_phi_mux_in_a_pulse_1_phi_fu_339_p4);
    p_Result_10_fu_539_p2 <= "0" when (and_ln_fu_445_p3 = ap_const_lv65_0) else "1";
    
    p_Result_6_fu_556_p4_proc : process(tmp_user_V_2_reg_699, p_Repl2_s_reg_732)
    begin
        p_Result_6_fu_556_p4 <= tmp_user_V_2_reg_699;
        p_Result_6_fu_556_p4(64) <= p_Repl2_s_reg_732(0);
    end process;

    
    p_Result_7_fu_564_p4_proc : process(p_Result_6_fu_556_p4)
    begin
        p_Result_7_fu_564_p4 <= p_Result_6_fu_556_p4;
        p_Result_7_fu_564_p4(72) <= ap_const_lv1_0(0);
    end process;

    p_Result_8_fu_586_p5 <= (p_Result_7_fu_564_p4(127 downto 95) & ap_const_lv3_6 & p_Result_7_fu_564_p4(91 downto 0));
    p_Result_9_fu_626_p5 <= (p_Result_7_reg_762(127 downto 95) & ap_const_lv3_7 & p_Result_7_reg_762(91 downto 0));
    p_Result_s_fu_453_p2 <= "1" when (and_ln_fu_445_p3 = ap_const_lv65_0) else "0";

    pulse_metadata_V_TREADY_assign_proc : process(pulse_metadata_V_TVALID, regslice_both_pulse_metadata_V_U_ack_in)
    begin
        if (((regslice_both_pulse_metadata_V_U_ack_in = ap_const_logic_1) and (pulse_metadata_V_TVALID = ap_const_logic_1))) then 
            pulse_metadata_V_TREADY <= ap_const_logic_1;
        else 
            pulse_metadata_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    pulse_metadata_V_TREADY_int_assign_proc : process(ap_CS_fsm_state8, grp_handle_header_fu_360_pulse_metadata_V_TREADY)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pulse_metadata_V_TREADY_int <= grp_handle_header_fu_360_pulse_metadata_V_TREADY;
        else 
            pulse_metadata_V_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;

    sample_counter_1_fu_525_p2 <= std_logic_vector(unsigned(ap_phi_mux_sample_counter_119_phi_fu_317_p4) + unsigned(ap_const_lv32_1));
    select_ln86_fu_531_p3 <= 
        sample_counter_1_fu_525_p2 when (dec_keep_fu_489_p2(0) = '1') else 
        ap_phi_mux_sample_counter_119_phi_fu_317_p4;
    terminate_fu_666_p1 <= grp_handle_header_fu_360_ap_return_0;
    tmp_2_fu_437_p3 <= i_data_TUSER_int(64 downto 64);
    tmp_data_V_fu_574_p1 <= tmp_data_V_2_reg_678(32 - 1 downto 0);
    tmp_keep_V_fu_578_p1 <= tmp_keep_V_2_reg_685(4 - 1 downto 0);
    tmp_strb_V_fu_582_p1 <= tmp_strb_V_2_reg_692(4 - 1 downto 0);
    xor_ln61_1_fu_477_p2 <= (icmp_ln61_fu_465_p2 xor ap_const_lv1_1);
    xor_ln61_fu_545_p2 <= (ap_const_lv1_1 xor and_ln61_reg_727);
    xor_ln73_fu_501_p2 <= (ap_phi_mux_in_a_xfer_bundle_1_phi_fu_328_p4 xor ap_const_lv1_1);
end behav;
