// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hcr_metadata_injector,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku060-ffva1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.745000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1896,HLS_SYN_LUT=1232,HLS_VERSION=2019_2}" *)

module hcr_metadata_injector (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        i_data_TDATA,
        i_data_TVALID,
        i_data_TREADY,
        i_data_TKEEP,
        i_data_TSTRB,
        i_data_TUSER,
        i_data_TLAST,
        i_data_TID,
        i_data_TDEST,
        o_data_TDATA,
        o_data_TVALID,
        o_data_TREADY,
        o_data_TKEEP,
        o_data_TSTRB,
        o_data_TUSER,
        o_data_TLAST,
        o_data_TID,
        o_data_TDEST,
        pulse_metadata_V_TDATA,
        pulse_metadata_V_TVALID,
        pulse_metadata_V_TREADY,
        pos_enc_0,
        pos_enc_1,
        flags
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_state6 = 6'd8;
parameter    ap_ST_fsm_state7 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] i_data_TDATA;
input   i_data_TVALID;
output   i_data_TREADY;
input  [3:0] i_data_TKEEP;
input  [3:0] i_data_TSTRB;
input  [127:0] i_data_TUSER;
input  [0:0] i_data_TLAST;
input  [0:0] i_data_TID;
input  [0:0] i_data_TDEST;
output  [31:0] o_data_TDATA;
output   o_data_TVALID;
input   o_data_TREADY;
output  [3:0] o_data_TKEEP;
output  [3:0] o_data_TSTRB;
output  [127:0] o_data_TUSER;
output  [0:0] o_data_TLAST;
output  [0:0] o_data_TID;
output  [0:0] o_data_TDEST;
input  [855:0] pulse_metadata_V_TDATA;
input   pulse_metadata_V_TVALID;
output   pulse_metadata_V_TREADY;
input  [31:0] pos_enc_0;
input  [31:0] pos_enc_1;
input  [15:0] flags;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg i_data_TREADY;
reg pulse_metadata_V_TREADY;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    i_data_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    o_data_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] or_ln55_reg_634;
reg   [0:0] or_ln73_reg_649;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] or_ln55_reg_634_pp0_iter1_reg;
reg   [0:0] or_ln73_reg_649_pp0_iter1_reg;
reg   [0:0] previous_gate_bit_1_reg_269;
reg   [7:0] decimation_counter_120_reg_279;
reg   [31:0] sample_counter_119_reg_290;
reg   [0:0] in_a_xfer_bundle_1_reg_301;
reg   [0:0] in_a_pulse_1_reg_312;
reg   [7:0] decimation_counter_2_reg_323;
reg   [31:0] tmp_data_V_reg_592;
reg    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op89_write_state4;
reg    ap_block_state4_io;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_predicate_op90_write_state5;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] tmp_keep_V_reg_598;
reg   [3:0] tmp_strb_V_reg_604;
reg   [127:0] tmp_user_V_1_reg_610;
reg   [0:0] tmp_last_V_reg_616;
reg   [0:0] tmp_id_V_reg_622;
reg   [0:0] tmp_dest_V_reg_628;
wire   [0:0] or_ln55_fu_434_p2;
wire   [0:0] and_ln61_1_fu_458_p2;
reg   [0:0] and_ln61_1_reg_638;
wire   [0:0] p_Repl2_s_fu_470_p2;
reg   [0:0] p_Repl2_s_reg_643;
wire   [0:0] or_ln73_fu_500_p2;
wire   [31:0] select_ln86_fu_519_p3;
reg   [31:0] select_ln86_reg_653;
wire   [0:0] p_Result_6_fu_527_p2;
reg   [127:0] p_Result_5_fu_541_p4;
reg   [31:0] pos_enc_0_read_reg_668;
wire    ap_CS_fsm_state6;
reg   [31:0] pos_enc_1_read_reg_673;
reg   [15:0] flags_read_reg_678;
wire    ap_CS_fsm_state7;
wire    grp_handle_header_fu_335_ap_ready;
wire    grp_handle_header_fu_335_ap_done;
wire    ap_CS_fsm_state2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    grp_handle_header_fu_335_ap_start;
wire    grp_handle_header_fu_335_ap_idle;
wire    grp_handle_header_fu_335_pulse_metadata_V_TREADY;
wire    grp_handle_header_fu_335_in_a_pulse_read;
wire    grp_handle_header_fu_335_in_a_xfer_bundle_rea;
wire    grp_handle_header_fu_335_break_after_pulse_re;
wire   [31:0] grp_handle_header_fu_335_o_data_TDATA;
wire    grp_handle_header_fu_335_o_data_TVALID;
wire    grp_handle_header_fu_335_o_data_TREADY;
wire   [3:0] grp_handle_header_fu_335_o_data_TKEEP;
wire   [3:0] grp_handle_header_fu_335_o_data_TSTRB;
wire   [127:0] grp_handle_header_fu_335_o_data_TUSER;
wire   [0:0] grp_handle_header_fu_335_o_data_TLAST;
wire   [0:0] grp_handle_header_fu_335_o_data_TID;
wire   [0:0] grp_handle_header_fu_335_o_data_TDEST;
wire   [0:0] grp_handle_header_fu_335_ap_return_0;
wire   [0:0] grp_handle_header_fu_335_ap_return_1;
wire   [0:0] grp_handle_header_fu_335_ap_return_2;
wire   [0:0] grp_handle_header_fu_335_ap_return_3;
wire   [7:0] grp_handle_header_fu_335_ap_return_4;
wire   [7:0] grp_handle_header_fu_335_ap_return_5;
wire   [63:0] grp_handle_header_fu_335_ap_return_6;
wire   [0:0] grp_handle_header_fu_335_ap_return_7;
wire   [31:0] grp_handle_header_fu_335_ap_return_8;
wire   [31:0] grp_handle_header_fu_335_ap_return_9;
reg   [0:0] previous_gate_bit_0_reg_161;
wire   [0:0] terminate_fu_580_p1;
reg   [63:0] pulse_sequence_count_reg_173;
reg   [7:0] decimation_counter_0_reg_185;
reg   [31:0] sample_counter_0_reg_197;
reg   [31:0] num_samples_0_reg_209;
reg   [0:0] break_after_pulse_0_reg_221;
reg   [0:0] in_a_xfer_bundle_0_reg_233;
reg   [0:0] in_a_pulse_0_reg_245;
reg   [7:0] decimation_value_0_reg_257;
reg   [7:0] ap_phi_mux_decimation_counter_120_phi_fu_282_p4;
reg   [31:0] ap_phi_mux_sample_counter_119_phi_fu_293_p4;
reg   [0:0] ap_phi_mux_in_a_xfer_bundle_1_phi_fu_304_p4;
reg   [0:0] ap_phi_mux_in_a_pulse_1_phi_fu_315_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_decimation_counter_2_reg_323;
wire   [7:0] decimation_counter_1_fu_506_p2;
reg    grp_handle_header_fu_335_ap_start_reg;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_2_fu_412_p3;
wire   [64:0] and_ln_fu_420_p3;
wire   [0:0] p_Result_s_fu_428_p2;
wire   [0:0] icmp_ln61_fu_440_p2;
wire   [0:0] and_ln61_fu_446_p2;
wire   [0:0] xor_ln61_fu_452_p2;
wire   [0:0] xor_ln61_1_fu_464_p2;
wire   [0:0] dec_keep_fu_476_p2;
wire   [0:0] and_ln73_fu_482_p2;
wire   [0:0] xor_ln73_fu_488_p2;
wire   [0:0] or_ln73_1_fu_494_p2;
wire   [31:0] sample_counter_1_fu_513_p2;
reg   [127:0] p_Result_4_fu_533_p4;
wire    ap_CS_fsm_state8;
wire    regslice_both_o_data_V_data_V_U_apdone_blk;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_i_data_V_data_V_U_apdone_blk;
wire   [31:0] i_data_TDATA_int;
wire    i_data_TVALID_int;
reg    i_data_TREADY_int;
wire    regslice_both_i_data_V_data_V_U_ack_in;
wire    regslice_both_i_data_V_keep_V_U_apdone_blk;
wire   [3:0] i_data_TKEEP_int;
wire    regslice_both_i_data_V_keep_V_U_vld_out;
wire    regslice_both_i_data_V_keep_V_U_ack_in;
wire    regslice_both_i_data_V_strb_V_U_apdone_blk;
wire   [3:0] i_data_TSTRB_int;
wire    regslice_both_i_data_V_strb_V_U_vld_out;
wire    regslice_both_i_data_V_strb_V_U_ack_in;
wire    regslice_both_i_data_V_user_V_U_apdone_blk;
wire   [127:0] i_data_TUSER_int;
wire    regslice_both_i_data_V_user_V_U_vld_out;
wire    regslice_both_i_data_V_user_V_U_ack_in;
wire    regslice_both_i_data_V_last_V_U_apdone_blk;
wire   [0:0] i_data_TLAST_int;
wire    regslice_both_i_data_V_last_V_U_vld_out;
wire    regslice_both_i_data_V_last_V_U_ack_in;
wire    regslice_both_i_data_V_id_V_U_apdone_blk;
wire   [0:0] i_data_TID_int;
wire    regslice_both_i_data_V_id_V_U_vld_out;
wire    regslice_both_i_data_V_id_V_U_ack_in;
wire    regslice_both_i_data_V_dest_V_U_apdone_blk;
wire   [0:0] i_data_TDEST_int;
wire    regslice_both_i_data_V_dest_V_U_vld_out;
wire    regslice_both_i_data_V_dest_V_U_ack_in;
reg   [31:0] o_data_TDATA_int;
reg    o_data_TVALID_int;
wire    o_data_TREADY_int;
wire    regslice_both_o_data_V_data_V_U_vld_out;
wire    regslice_both_o_data_V_keep_V_U_apdone_blk;
reg   [3:0] o_data_TKEEP_int;
wire    regslice_both_o_data_V_keep_V_U_ack_in_dummy;
wire    regslice_both_o_data_V_keep_V_U_vld_out;
wire    regslice_both_o_data_V_strb_V_U_apdone_blk;
reg   [3:0] o_data_TSTRB_int;
wire    regslice_both_o_data_V_strb_V_U_ack_in_dummy;
wire    regslice_both_o_data_V_strb_V_U_vld_out;
wire    regslice_both_o_data_V_user_V_U_apdone_blk;
reg   [127:0] o_data_TUSER_int;
wire    regslice_both_o_data_V_user_V_U_ack_in_dummy;
wire    regslice_both_o_data_V_user_V_U_vld_out;
wire    regslice_both_o_data_V_last_V_U_apdone_blk;
reg   [0:0] o_data_TLAST_int;
wire    regslice_both_o_data_V_last_V_U_ack_in_dummy;
wire    regslice_both_o_data_V_last_V_U_vld_out;
wire    regslice_both_o_data_V_id_V_U_apdone_blk;
reg   [0:0] o_data_TID_int;
wire    regslice_both_o_data_V_id_V_U_ack_in_dummy;
wire    regslice_both_o_data_V_id_V_U_vld_out;
wire    regslice_both_o_data_V_dest_V_U_apdone_blk;
reg   [0:0] o_data_TDEST_int;
wire    regslice_both_o_data_V_dest_V_U_ack_in_dummy;
wire    regslice_both_o_data_V_dest_V_U_vld_out;
wire    regslice_both_pulse_metadata_V_U_apdone_blk;
wire   [855:0] pulse_metadata_V_TDATA_int;
wire    pulse_metadata_V_TVALID_int;
reg    pulse_metadata_V_TREADY_int;
wire    regslice_both_pulse_metadata_V_U_ack_in;
reg    ap_condition_125;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_handle_header_fu_335_ap_start_reg = 1'b0;
end

handle_header grp_handle_header_fu_335(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_handle_header_fu_335_ap_start),
    .ap_done(grp_handle_header_fu_335_ap_done),
    .ap_idle(grp_handle_header_fu_335_ap_idle),
    .ap_ready(grp_handle_header_fu_335_ap_ready),
    .pulse_metadata_V_TDATA(pulse_metadata_V_TDATA_int),
    .pulse_metadata_V_TVALID(pulse_metadata_V_TVALID_int),
    .pulse_metadata_V_TREADY(grp_handle_header_fu_335_pulse_metadata_V_TREADY),
    .data_word_data_V(tmp_data_V_reg_592),
    .data_word_keep_V(tmp_keep_V_reg_598),
    .data_word_strb_V(tmp_strb_V_reg_604),
    .data_word_user_V(tmp_user_V_1_reg_610),
    .data_word_last_V(tmp_last_V_reg_616),
    .data_word_id_V(tmp_id_V_reg_622),
    .data_word_dest_V(tmp_dest_V_reg_628),
    .in_a_pulse_read(grp_handle_header_fu_335_in_a_pulse_read),
    .in_a_xfer_bundle_rea(grp_handle_header_fu_335_in_a_xfer_bundle_rea),
    .break_after_pulse_re(grp_handle_header_fu_335_break_after_pulse_re),
    .num_samples_read(num_samples_0_reg_209),
    .sample_counter_read(sample_counter_119_reg_290),
    .decimation_value_rea(decimation_value_0_reg_257),
    .decimation_counter_r(decimation_counter_120_reg_279),
    .pulse_sequence_count(pulse_sequence_count_reg_173),
    .o_data_TDATA(grp_handle_header_fu_335_o_data_TDATA),
    .o_data_TVALID(grp_handle_header_fu_335_o_data_TVALID),
    .o_data_TREADY(grp_handle_header_fu_335_o_data_TREADY),
    .o_data_TKEEP(grp_handle_header_fu_335_o_data_TKEEP),
    .o_data_TSTRB(grp_handle_header_fu_335_o_data_TSTRB),
    .o_data_TUSER(grp_handle_header_fu_335_o_data_TUSER),
    .o_data_TLAST(grp_handle_header_fu_335_o_data_TLAST),
    .o_data_TID(grp_handle_header_fu_335_o_data_TID),
    .o_data_TDEST(grp_handle_header_fu_335_o_data_TDEST),
    .pos_enc_0(pos_enc_0_read_reg_668),
    .pos_enc_1(pos_enc_1_read_reg_673),
    .flags(flags_read_reg_678),
    .ap_return_0(grp_handle_header_fu_335_ap_return_0),
    .ap_return_1(grp_handle_header_fu_335_ap_return_1),
    .ap_return_2(grp_handle_header_fu_335_ap_return_2),
    .ap_return_3(grp_handle_header_fu_335_ap_return_3),
    .ap_return_4(grp_handle_header_fu_335_ap_return_4),
    .ap_return_5(grp_handle_header_fu_335_ap_return_5),
    .ap_return_6(grp_handle_header_fu_335_ap_return_6),
    .ap_return_7(grp_handle_header_fu_335_ap_return_7),
    .ap_return_8(grp_handle_header_fu_335_ap_return_8),
    .ap_return_9(grp_handle_header_fu_335_ap_return_9)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_i_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(i_data_TDATA),
    .vld_in(i_data_TVALID),
    .ack_in(regslice_both_i_data_V_data_V_U_ack_in),
    .data_out(i_data_TDATA_int),
    .vld_out(i_data_TVALID_int),
    .ack_out(i_data_TREADY_int),
    .apdone_blk(regslice_both_i_data_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_i_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(i_data_TKEEP),
    .vld_in(i_data_TVALID),
    .ack_in(regslice_both_i_data_V_keep_V_U_ack_in),
    .data_out(i_data_TKEEP_int),
    .vld_out(regslice_both_i_data_V_keep_V_U_vld_out),
    .ack_out(i_data_TREADY_int),
    .apdone_blk(regslice_both_i_data_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_i_data_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(i_data_TSTRB),
    .vld_in(i_data_TVALID),
    .ack_in(regslice_both_i_data_V_strb_V_U_ack_in),
    .data_out(i_data_TSTRB_int),
    .vld_out(regslice_both_i_data_V_strb_V_U_vld_out),
    .ack_out(i_data_TREADY_int),
    .apdone_blk(regslice_both_i_data_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 128 ))
regslice_both_i_data_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(i_data_TUSER),
    .vld_in(i_data_TVALID),
    .ack_in(regslice_both_i_data_V_user_V_U_ack_in),
    .data_out(i_data_TUSER_int),
    .vld_out(regslice_both_i_data_V_user_V_U_vld_out),
    .ack_out(i_data_TREADY_int),
    .apdone_blk(regslice_both_i_data_V_user_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_i_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(i_data_TLAST),
    .vld_in(i_data_TVALID),
    .ack_in(regslice_both_i_data_V_last_V_U_ack_in),
    .data_out(i_data_TLAST_int),
    .vld_out(regslice_both_i_data_V_last_V_U_vld_out),
    .ack_out(i_data_TREADY_int),
    .apdone_blk(regslice_both_i_data_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_i_data_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(i_data_TID),
    .vld_in(i_data_TVALID),
    .ack_in(regslice_both_i_data_V_id_V_U_ack_in),
    .data_out(i_data_TID_int),
    .vld_out(regslice_both_i_data_V_id_V_U_vld_out),
    .ack_out(i_data_TREADY_int),
    .apdone_blk(regslice_both_i_data_V_id_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_i_data_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(i_data_TDEST),
    .vld_in(i_data_TVALID),
    .ack_in(regslice_both_i_data_V_dest_V_U_ack_in),
    .data_out(i_data_TDEST_int),
    .vld_out(regslice_both_i_data_V_dest_V_U_vld_out),
    .ack_out(i_data_TREADY_int),
    .apdone_blk(regslice_both_i_data_V_dest_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_o_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(o_data_TDATA_int),
    .vld_in(o_data_TVALID_int),
    .ack_in(o_data_TREADY_int),
    .data_out(o_data_TDATA),
    .vld_out(regslice_both_o_data_V_data_V_U_vld_out),
    .ack_out(o_data_TREADY),
    .apdone_blk(regslice_both_o_data_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_o_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(o_data_TKEEP_int),
    .vld_in(o_data_TVALID_int),
    .ack_in(regslice_both_o_data_V_keep_V_U_ack_in_dummy),
    .data_out(o_data_TKEEP),
    .vld_out(regslice_both_o_data_V_keep_V_U_vld_out),
    .ack_out(o_data_TREADY),
    .apdone_blk(regslice_both_o_data_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 4 ))
regslice_both_o_data_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(o_data_TSTRB_int),
    .vld_in(o_data_TVALID_int),
    .ack_in(regslice_both_o_data_V_strb_V_U_ack_in_dummy),
    .data_out(o_data_TSTRB),
    .vld_out(regslice_both_o_data_V_strb_V_U_vld_out),
    .ack_out(o_data_TREADY),
    .apdone_blk(regslice_both_o_data_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 128 ))
regslice_both_o_data_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(o_data_TUSER_int),
    .vld_in(o_data_TVALID_int),
    .ack_in(regslice_both_o_data_V_user_V_U_ack_in_dummy),
    .data_out(o_data_TUSER),
    .vld_out(regslice_both_o_data_V_user_V_U_vld_out),
    .ack_out(o_data_TREADY),
    .apdone_blk(regslice_both_o_data_V_user_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_o_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(o_data_TLAST_int),
    .vld_in(o_data_TVALID_int),
    .ack_in(regslice_both_o_data_V_last_V_U_ack_in_dummy),
    .data_out(o_data_TLAST),
    .vld_out(regslice_both_o_data_V_last_V_U_vld_out),
    .ack_out(o_data_TREADY),
    .apdone_blk(regslice_both_o_data_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_o_data_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(o_data_TID_int),
    .vld_in(o_data_TVALID_int),
    .ack_in(regslice_both_o_data_V_id_V_U_ack_in_dummy),
    .data_out(o_data_TID),
    .vld_out(regslice_both_o_data_V_id_V_U_vld_out),
    .ack_out(o_data_TREADY),
    .apdone_blk(regslice_both_o_data_V_id_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_o_data_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(o_data_TDEST_int),
    .vld_in(o_data_TVALID_int),
    .ack_in(regslice_both_o_data_V_dest_V_U_ack_in_dummy),
    .data_out(o_data_TDEST),
    .vld_out(regslice_both_o_data_V_dest_V_U_vld_out),
    .ack_out(o_data_TREADY),
    .apdone_blk(regslice_both_o_data_V_dest_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 856 ))
regslice_both_pulse_metadata_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(pulse_metadata_V_TDATA),
    .vld_in(pulse_metadata_V_TVALID),
    .ack_in(regslice_both_pulse_metadata_V_U_ack_in),
    .data_out(pulse_metadata_V_TDATA_int),
    .vld_out(pulse_metadata_V_TVALID_int),
    .ack_out(pulse_metadata_V_TREADY_int),
    .apdone_blk(regslice_both_pulse_metadata_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_handle_header_fu_335_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_handle_header_fu_335_ap_start_reg <= 1'b1;
        end else if ((grp_handle_header_fu_335_ap_ready == 1'b1)) begin
            grp_handle_header_fu_335_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        break_after_pulse_0_reg_221 <= grp_handle_header_fu_335_ap_return_3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        break_after_pulse_0_reg_221 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        decimation_counter_0_reg_185 <= grp_handle_header_fu_335_ap_return_5;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        decimation_counter_0_reg_185 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln55_reg_634 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        decimation_counter_120_reg_279 <= decimation_counter_2_reg_323;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        decimation_counter_120_reg_279 <= decimation_counter_0_reg_185;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_125)) begin
        if (((or_ln55_fu_434_p2 == 1'd1) & (or_ln73_fu_500_p2 == 1'd0))) begin
            decimation_counter_2_reg_323 <= decimation_counter_1_fu_506_p2;
        end else if (((or_ln73_fu_500_p2 == 1'd1) & (or_ln55_fu_434_p2 == 1'd1))) begin
            decimation_counter_2_reg_323 <= 8'd1;
        end else if ((1'b1 == 1'b1)) begin
            decimation_counter_2_reg_323 <= ap_phi_reg_pp0_iter0_decimation_counter_2_reg_323;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        decimation_value_0_reg_257 <= grp_handle_header_fu_335_ap_return_4;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        decimation_value_0_reg_257 <= 8'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        in_a_pulse_0_reg_245 <= grp_handle_header_fu_335_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        in_a_pulse_0_reg_245 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln55_reg_634 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_a_pulse_1_reg_312 <= p_Repl2_s_reg_643;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_a_pulse_1_reg_312 <= in_a_pulse_0_reg_245;
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        in_a_xfer_bundle_0_reg_233 <= grp_handle_header_fu_335_ap_return_2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        in_a_xfer_bundle_0_reg_233 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln55_reg_634 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_a_xfer_bundle_1_reg_301 <= and_ln61_1_reg_638;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_a_xfer_bundle_1_reg_301 <= in_a_xfer_bundle_0_reg_233;
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        num_samples_0_reg_209 <= grp_handle_header_fu_335_ap_return_8;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        num_samples_0_reg_209 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        previous_gate_bit_0_reg_161 <= grp_handle_header_fu_335_ap_return_7;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        previous_gate_bit_0_reg_161 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln55_fu_434_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        previous_gate_bit_1_reg_269 <= p_Result_6_fu_527_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        previous_gate_bit_1_reg_269 <= previous_gate_bit_0_reg_161;
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        pulse_sequence_count_reg_173 <= grp_handle_header_fu_335_ap_return_6;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        pulse_sequence_count_reg_173 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
        sample_counter_0_reg_197 <= grp_handle_header_fu_335_ap_return_9;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        sample_counter_0_reg_197 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln55_reg_634 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sample_counter_119_reg_290 <= select_ln86_reg_653;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sample_counter_119_reg_290 <= sample_counter_0_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln55_fu_434_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln61_1_reg_638 <= and_ln61_1_fu_458_p2;
        p_Repl2_s_reg_643 <= p_Repl2_s_fu_470_p2;
        select_ln86_reg_653 <= select_ln86_fu_519_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        flags_read_reg_678 <= flags;
        pos_enc_0_read_reg_668 <= pos_enc_0;
        pos_enc_1_read_reg_673 <= pos_enc_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_ln55_reg_634 <= or_ln55_fu_434_p2;
        or_ln55_reg_634_pp0_iter1_reg <= or_ln55_reg_634;
        or_ln73_reg_649_pp0_iter1_reg <= or_ln73_reg_649;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln55_fu_434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_ln73_reg_649 <= or_ln73_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_reg_592 <= i_data_TDATA_int;
        tmp_dest_V_reg_628 <= i_data_TDEST_int;
        tmp_id_V_reg_622 <= i_data_TID_int;
        tmp_keep_V_reg_598 <= i_data_TKEEP_int;
        tmp_last_V_reg_616 <= i_data_TLAST_int;
        tmp_strb_V_reg_604 <= i_data_TSTRB_int;
        tmp_user_V_1_reg_610 <= i_data_TUSER_int;
    end
end

always @ (*) begin
    if ((or_ln55_fu_434_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_o_data_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln55_reg_634 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_decimation_counter_120_phi_fu_282_p4 = decimation_counter_2_reg_323;
    end else begin
        ap_phi_mux_decimation_counter_120_phi_fu_282_p4 = decimation_counter_120_reg_279;
    end
end

always @ (*) begin
    if (((or_ln55_reg_634 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_in_a_pulse_1_phi_fu_315_p4 = p_Repl2_s_reg_643;
    end else begin
        ap_phi_mux_in_a_pulse_1_phi_fu_315_p4 = in_a_pulse_1_reg_312;
    end
end

always @ (*) begin
    if (((or_ln55_reg_634 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_in_a_xfer_bundle_1_phi_fu_304_p4 = and_ln61_1_reg_638;
    end else begin
        ap_phi_mux_in_a_xfer_bundle_1_phi_fu_304_p4 = in_a_xfer_bundle_1_reg_301;
    end
end

always @ (*) begin
    if (((or_ln55_reg_634 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_sample_counter_119_phi_fu_293_p4 = select_ln86_reg_653;
    end else begin
        ap_phi_mux_sample_counter_119_phi_fu_293_p4 = sample_counter_119_reg_290;
    end
end

always @ (*) begin
    if (((regslice_both_o_data_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_TDATA_blk_n = i_data_TVALID_int;
    end else begin
        i_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_i_data_V_data_V_U_ack_in == 1'b1) & (i_data_TVALID == 1'b1))) begin
        i_data_TREADY = 1'b1;
    end else begin
        i_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_data_TREADY_int = 1'b1;
    end else begin
        i_data_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((((or_ln73_reg_649_pp0_iter1_reg == 1'd1) & (or_ln55_reg_634_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_ln73_reg_649 == 1'd1) & (or_ln55_reg_634 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        o_data_TDATA_blk_n = o_data_TREADY_int;
    end else begin
        o_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_data_TDATA_int = tmp_data_V_reg_592;
    end else if (((grp_handle_header_fu_335_o_data_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        o_data_TDATA_int = grp_handle_header_fu_335_o_data_TDATA;
    end else begin
        o_data_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_data_TDEST_int = tmp_dest_V_reg_628;
    end else if (((grp_handle_header_fu_335_o_data_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        o_data_TDEST_int = grp_handle_header_fu_335_o_data_TDEST;
    end else begin
        o_data_TDEST_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_data_TID_int = tmp_id_V_reg_622;
    end else if (((grp_handle_header_fu_335_o_data_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        o_data_TID_int = grp_handle_header_fu_335_o_data_TID;
    end else begin
        o_data_TID_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_data_TKEEP_int = tmp_keep_V_reg_598;
    end else if (((grp_handle_header_fu_335_o_data_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        o_data_TKEEP_int = grp_handle_header_fu_335_o_data_TKEEP;
    end else begin
        o_data_TKEEP_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_data_TLAST_int = tmp_last_V_reg_616;
    end else if (((grp_handle_header_fu_335_o_data_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        o_data_TLAST_int = grp_handle_header_fu_335_o_data_TLAST;
    end else begin
        o_data_TLAST_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_data_TSTRB_int = tmp_strb_V_reg_604;
    end else if (((grp_handle_header_fu_335_o_data_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        o_data_TSTRB_int = grp_handle_header_fu_335_o_data_TSTRB;
    end else begin
        o_data_TSTRB_int = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_data_TUSER_int = p_Result_5_fu_541_p4;
    end else if (((grp_handle_header_fu_335_o_data_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        o_data_TUSER_int = grp_handle_header_fu_335_o_data_TUSER;
    end else begin
        o_data_TUSER_int = 'bx;
    end
end

always @ (*) begin
    if (((ap_predicate_op89_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        o_data_TVALID_int = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        o_data_TVALID_int = grp_handle_header_fu_335_o_data_TVALID;
    end else begin
        o_data_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_pulse_metadata_V_U_ack_in == 1'b1) & (pulse_metadata_V_TVALID == 1'b1))) begin
        pulse_metadata_V_TREADY = 1'b1;
    end else begin
        pulse_metadata_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        pulse_metadata_V_TREADY_int = grp_handle_header_fu_335_pulse_metadata_V_TREADY;
    end else begin
        pulse_metadata_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln55_fu_434_p2 == 1'd0)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln55_fu_434_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((terminate_fu_580_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((terminate_fu_580_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (grp_handle_header_fu_335_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((regslice_both_o_data_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln61_1_fu_458_p2 = (xor_ln61_fu_452_p2 & ap_phi_mux_in_a_xfer_bundle_1_phi_fu_304_p4);

assign and_ln61_fu_446_p2 = (icmp_ln61_fu_440_p2 & break_after_pulse_0_reg_221);

assign and_ln73_fu_482_p2 = (p_Repl2_s_fu_470_p2 & dec_keep_fu_476_p2);

assign and_ln_fu_420_p3 = {{tmp_2_fu_412_p3}, {64'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((i_data_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((i_data_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((i_data_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0 = (i_data_TVALID_int == 1'b0);
end

always @ (*) begin
    ap_block_state4_io = ((o_data_TREADY_int == 1'b0) & (ap_predicate_op89_write_state4 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((o_data_TREADY_int == 1'b0) & (ap_predicate_op90_write_state5 == 1'b1));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_125 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_decimation_counter_2_reg_323 = 'bx;

always @ (*) begin
    ap_predicate_op89_write_state4 = ((or_ln73_reg_649 == 1'd1) & (or_ln55_reg_634 == 1'd1));
end

always @ (*) begin
    ap_predicate_op90_write_state5 = ((or_ln73_reg_649_pp0_iter1_reg == 1'd1) & (or_ln55_reg_634_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign dec_keep_fu_476_p2 = ((ap_phi_mux_decimation_counter_120_phi_fu_282_p4 == decimation_value_0_reg_257) ? 1'b1 : 1'b0);

assign decimation_counter_1_fu_506_p2 = (ap_phi_mux_decimation_counter_120_phi_fu_282_p4 + 8'd1);

assign grp_handle_header_fu_335_ap_start = grp_handle_header_fu_335_ap_start_reg;

assign grp_handle_header_fu_335_break_after_pulse_re = break_after_pulse_0_reg_221;

assign grp_handle_header_fu_335_in_a_pulse_read = in_a_pulse_1_reg_312;

assign grp_handle_header_fu_335_in_a_xfer_bundle_rea = in_a_xfer_bundle_1_reg_301;

assign grp_handle_header_fu_335_o_data_TREADY = (o_data_TREADY_int & ap_CS_fsm_state7);

assign icmp_ln61_fu_440_p2 = ((ap_phi_mux_sample_counter_119_phi_fu_293_p4 == num_samples_0_reg_209) ? 1'b1 : 1'b0);

assign o_data_TVALID = regslice_both_o_data_V_data_V_U_vld_out;

assign or_ln55_fu_434_p2 = (previous_gate_bit_1_reg_269 | p_Result_s_fu_428_p2);

assign or_ln73_1_fu_494_p2 = (xor_ln73_fu_488_p2 | and_ln73_fu_482_p2);

assign or_ln73_fu_500_p2 = (or_ln73_1_fu_494_p2 | and_ln61_fu_446_p2);

assign p_Repl2_s_fu_470_p2 = (xor_ln61_1_fu_464_p2 & ap_phi_mux_in_a_pulse_1_phi_fu_315_p4);

always @ (*) begin
    p_Result_4_fu_533_p4 = tmp_user_V_1_reg_610;
    p_Result_4_fu_533_p4[32'd64] = |(p_Repl2_s_reg_643);
end

always @ (*) begin
    p_Result_5_fu_541_p4 = p_Result_4_fu_533_p4;
    p_Result_5_fu_541_p4[32'd72] = |(1'd0);
end

assign p_Result_6_fu_527_p2 = ((and_ln_fu_420_p3 != 65'd0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_428_p2 = ((and_ln_fu_420_p3 == 65'd0) ? 1'b1 : 1'b0);

assign sample_counter_1_fu_513_p2 = (ap_phi_mux_sample_counter_119_phi_fu_293_p4 + 32'd1);

assign select_ln86_fu_519_p3 = ((dec_keep_fu_476_p2[0:0] === 1'b1) ? sample_counter_1_fu_513_p2 : ap_phi_mux_sample_counter_119_phi_fu_293_p4);

assign terminate_fu_580_p1 = grp_handle_header_fu_335_ap_return_0;

assign tmp_2_fu_412_p3 = i_data_TUSER_int[32'd64];

assign xor_ln61_1_fu_464_p2 = (icmp_ln61_fu_440_p2 ^ 1'd1);

assign xor_ln61_fu_452_p2 = (1'd1 ^ and_ln61_fu_446_p2);

assign xor_ln73_fu_488_p2 = (ap_phi_mux_in_a_xfer_bundle_1_phi_fu_304_p4 ^ 1'd1);

endmodule //hcr_metadata_injector
