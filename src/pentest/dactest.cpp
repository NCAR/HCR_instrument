#include <iomanip>
#include <iostream>
#include <string>
#include <sys/ioctl.h>
#include <fcntl.h>
#include <stdio.h>
#include <math.h>
#include <sched.h>
#include <sys/timeb.h>

#include "p7142hcr.h"

#define BASICSIZE   1024

using namespace std;

///////////////////////////////////////////////////////////
int main(int argc, char** argv) {

	if (argc < 6) {
		std::cout << "usage: " << argv[0]
				<< " <device root> <up converter name (e.g. 0C)> <sample rate Hz> <nco frequency Hz> <interpolation (2,4,8)>\n";
		exit(1);
	}

	std::string devRoot = argv[1];
	std::string upName = argv[2];
	double sampleRate = atof(argv[3]);
	double ncoFreq = atof(argv[4]);
	long interp = atoi(argv[5]);

	if (interp != 2 && interp != 4 && interp != 8) {
		std::cout << "interpolation must be 2, 4 or 8\n";
		exit(1);
	}
	// create the upconvertor
	Pentek::p7142up upConverter(devRoot, upName, sampleRate, ncoFreq, interp);

	if (!upConverter.ok()) {
		std::cerr << "cannot access " << devRoot << ", " << upName << "\n";
		exit(1);
	}

	// create the signal
	short IQ[1000];
	for (unsigned int i = 0; i < sizeof(IQ)/2; i += 2) {
		IQ[i]   = 30000;
		IQ[i+1] = 30000;
	}

	// load mem2
	upConverter.write(IQ, 1000);

	// start the upconverter
	upConverter.startDAC();

	while (1) {
		std::cout << ".";
		std::cout << std::flush;
		sleep(1);
	}

}

