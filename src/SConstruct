# -*- python -*-
# $Id: SConstruct,v 1.4 2005/08/23 16:22:41 granger Exp $

import os,os.path, sys
sys.path.insert(0, os.path.join(os.getcwd(),'config'))
import eol_scons
import SCons

options = eol_scons.GlobalVariables()

def HcrSetup(env):
    env.AppendUnique(CCFLAGS = ['-g'])
#    env.Replace(CCFLAGS = ['-g'])
## The next two lines will build with profiling
#    env.AppendUnique(CCFLAGS = ['-pg'])
#    env.AppendUnique(LINKFLAGS = ['-pg'])
    env.AppendUnique(CCFLAGS=['-Wall','-Wno-char-subscripts'])
    env.AppendUnique(CXXFLAGS=['-Wno-non-virtual-dtor'])  
    env['DOXYFILE_DICT'] = dict()
    env['DOXYFILE_DICT'].update({ 'HTML_HEADER' : env.File("#header.html") })
    return env
    
env = Environment(tools = ['default'], 
                  GLOBAL_TOOLS = ['prefixoptions', 'buildmode', HcrSetup])

SConscript("cmigitsDaemon/SConscript")
SConscript("fireflyd/SConscript")
SConscript("hcr_xmit/SConscript")
SConscript("hcrbscan/SConscript")
SConscript("hcrdrx/SConscript")
SConscript("hcrgui/SConscript")
SConscript("HcrMonitor/SConscript")
SConscript("HcrPmc730Daemon/SConscript")
SConscript("MotionControl/SConscript")
SConscript("tcpscope/SConscript")

env.Alias('apidocs', env.Dir("apidocs"))

options.Update(env)
env.SetHelp(options.GenerateHelpText(env))

