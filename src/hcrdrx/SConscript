# -*- python -*-

tools = Split("""
    boost_date_time
    boost_program_options
    cmigitsdaemonrpcclient
    doxygen
    drxstatus
    hcrdrxrpcclient
    hcrexecutiveclient
    hcrpmc730client
    logx
    lrose
    motioncontrol
    operationmode
    Pentek_xx821
    QFunctionWrapper
    qt5
    QXmlRpcServerAbyss
    setuidprogram
    xmitdrpcclient
""")
env = Environment(tools = ['default'] + tools)

# Note that DrxStatus.cpp, HcrdrxRpcClient.cpp, and HcrPmc730.cpp (which live
# in this directory) are compiled via a load of the SCons hcrdrxrpcclient tool
# (also in this directory).
sources = Split("""
    hcrdrx.cpp
    HcrDrxConfig.cpp
    HCR_Pentek.cpp
    StatusGrabber.cpp
    IwrfExport.cpp
    IwrfExportInsPoller.cpp
    PulseData.cpp
""")

headers = Split("""
    ChannelPulseData.h
    CircBuffer.h
    DrxStatus.h
    HcrDrxConfig.h
    HCR_Pentek.h
    IwrfExport.h
    IwrfExportInsPoller.h
    PulseData.h
    RadarController.h
    StatusGrabber.h
    xhcr_controller_hw.h
""")

hcrdrx = env.Program('hcrdrx', sources)

html = env.Apidocs(sources + headers)
Default(hcrdrx, html)

# Build setWinDriverIrqAffinity as a setuid program owned by root
#
# The program is not built by default. It must be built explicitly by root,
# usually with the command:
#
#    $ sudo scons setWinDriverIrqAffinity
#
# Note that the program *is* removed by default when cleaning
irqAffinityProg = env.SetuidProgram('setWinDriverIrqAffinity',
                                    'setWinDriverIrqAffinity.cpp')
if (GetOption("clean")):
    env.Default(irqAffinityProg)
