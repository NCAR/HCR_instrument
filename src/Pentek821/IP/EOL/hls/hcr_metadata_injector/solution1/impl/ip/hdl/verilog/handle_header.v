// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module handle_header (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pulse_metadata_V_TDATA,
        pulse_metadata_V_TVALID,
        pulse_metadata_V_TREADY,
        data_word_data_V,
        data_word_keep_V,
        data_word_strb_V,
        data_word_user_V,
        data_word_last_V,
        data_word_id_V,
        data_word_dest_V,
        in_a_pulse_read,
        in_a_xfer_bundle_rea,
        break_after_pulse_re,
        num_samples_read,
        sample_counter_read,
        decimation_value_rea,
        decimation_counter_r,
        o_data_TDATA,
        o_data_TVALID,
        o_data_TREADY,
        o_data_TKEEP,
        o_data_TSTRB,
        o_data_TUSER,
        o_data_TLAST,
        o_data_TID,
        o_data_TDEST,
        pos_enc_0,
        pos_enc_1,
        flags,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state4 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state7 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [855:0] pulse_metadata_V_TDATA;
input   pulse_metadata_V_TVALID;
output   pulse_metadata_V_TREADY;
input  [31:0] data_word_data_V;
input  [3:0] data_word_keep_V;
input  [3:0] data_word_strb_V;
input  [127:0] data_word_user_V;
input  [0:0] data_word_last_V;
input  [0:0] data_word_id_V;
input  [0:0] data_word_dest_V;
input   in_a_pulse_read;
input   in_a_xfer_bundle_rea;
input   break_after_pulse_re;
input  [31:0] num_samples_read;
input  [31:0] sample_counter_read;
input  [7:0] decimation_value_rea;
input  [7:0] decimation_counter_r;
output  [31:0] o_data_TDATA;
output   o_data_TVALID;
input   o_data_TREADY;
output  [3:0] o_data_TKEEP;
output  [3:0] o_data_TSTRB;
output  [127:0] o_data_TUSER;
output  [0:0] o_data_TLAST;
output  [0:0] o_data_TID;
output  [0:0] o_data_TDEST;
input  [31:0] pos_enc_0;
input  [31:0] pos_enc_1;
input  [15:0] flags;
output  [0:0] ap_return_0;
output  [0:0] ap_return_1;
output  [0:0] ap_return_2;
output  [0:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pulse_metadata_V_TREADY;
reg[31:0] o_data_TDATA;
reg o_data_TVALID;
reg[127:0] o_data_TUSER;
reg[0:0] ap_return_0;
reg[0:0] ap_return_1;
reg[0:0] ap_return_2;
reg[0:0] ap_return_3;
reg[7:0] ap_return_4;
reg[7:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    pulse_metadata_V_TDATA_blk_n;
reg    o_data_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln126_reg_823;
wire    ap_CS_fsm_state4;
wire   [0:0] p_Repl2_s_fu_431_p3;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln175_reg_866;
wire    ap_CS_fsm_state7;
reg   [0:0] tmp_reg_819;
reg   [31:0] x_0_reg_301;
reg   [3:0] x1_0_reg_310;
reg    ap_block_state1;
reg   [855:0] pulse_metadata_V_rea_reg_808;
wire   [0:0] tmp_fu_412_p3;
wire   [0:0] icmp_ln126_fu_420_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] x_fu_425_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] p_Repl2_2_reg_835;
reg    ap_block_state4_io;
reg   [31:0] header_5_reg_840;
reg   [7:0] decimation_value_0_n_reg_846;
wire   [19:0] tmp_3_fu_492_p3;
reg   [19:0] tmp_3_reg_851;
wire   [31:0] header_4_fu_508_p1;
reg   [31:0] header_4_reg_856;
wire   [31:0] header_6_fu_512_p1;
reg   [31:0] header_6_reg_861;
wire   [0:0] icmp_ln175_fu_515_p2;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_state6_io;
reg    ap_block_pp1_stage0_11001;
wire   [3:0] x_1_fu_521_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] tmp_data_V_1_fu_643_p3;
reg   [31:0] tmp_data_V_1_reg_875;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg   [7:0] ap_phi_mux_phi_ln193_phi_fu_324_p4;
reg   [7:0] phi_ln193_reg_321;
reg    ap_block_state7_io;
reg   [7:0] ap_phi_mux_phi_ln193_1_phi_fu_333_p4;
reg   [7:0] phi_ln193_1_reg_330;
reg   [0:0] ap_phi_mux_phi_ln193_2_phi_fu_343_p4;
reg   [0:0] phi_ln193_2_reg_340;
reg   [31:0] ap_phi_mux_phi_ln193_3_phi_fu_352_p4;
reg   [31:0] phi_ln193_3_reg_349;
reg   [0:0] ap_phi_mux_write_flag3_0_phi_fu_362_p4;
reg   [0:0] write_flag3_0_reg_358;
reg   [31:0] ap_phi_mux_phi_ln193_4_phi_fu_373_p4;
reg   [31:0] phi_ln193_4_reg_370;
reg   [0:0] ap_phi_mux_p_0161_phi_fu_384_p4;
reg   [0:0] p_0161_reg_380;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp1_stage0_01001;
reg   [127:0] grp_fu_401_p4;
reg   [127:0] p_Result_4_fu_447_p4;
reg   [127:0] p_Result_6_fu_651_p4;
reg   [127:0] grp_fu_392_p4;
reg   [127:0] p_Result_3_fu_438_p4;
wire   [3:0] tmp_2_fu_483_p4;
wire   [7:0] tmp_sequence_index_l_fu_499_p4;
wire   [2:0] trunc_ln179_fu_527_p1;
wire   [0:0] icmp_ln17_6_fu_567_p2;
wire   [0:0] icmp_ln17_5_fu_561_p2;
wire   [0:0] icmp_ln17_4_fu_555_p2;
wire   [0:0] icmp_ln17_3_fu_549_p2;
wire   [0:0] icmp_ln17_2_fu_543_p2;
wire   [0:0] icmp_ln17_1_fu_537_p2;
wire   [0:0] icmp_ln17_fu_531_p2;
wire   [19:0] select_ln17_3_fu_610_p3;
wire   [0:0] or_ln17_fu_580_p2;
wire   [31:0] select_ln17_fu_573_p3;
wire   [31:0] select_ln17_1_fu_586_p3;
wire   [0:0] or_ln17_1_fu_592_p2;
wire   [0:0] or_ln17_2_fu_604_p2;
wire   [31:0] select_ln17_2_fu_598_p3;
wire   [31:0] zext_ln17_fu_617_p1;
wire   [0:0] or_ln17_3_fu_629_p2;
wire   [31:0] select_ln17_4_fu_621_p3;
wire   [31:0] select_ln17_5_fu_635_p3;
wire   [0:0] or_ln193_fu_662_p1;
wire   [0:0] or_ln193_1_fu_667_p1;
wire   [0:0] or_ln193_fu_662_p2;
wire   [0:0] or_ln193_1_fu_667_p2;
reg   [0:0] ap_return_0_preg;
reg   [0:0] ap_return_1_preg;
reg   [0:0] ap_return_2_preg;
reg   [0:0] ap_return_3_preg;
reg   [7:0] ap_return_4_preg;
reg   [7:0] ap_return_5_preg;
reg   [31:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_return_0_preg = 1'd0;
#0 ap_return_1_preg = 1'd0;
#0 ap_return_2_preg = 1'd0;
#0 ap_return_3_preg = 1'd0;
#0 ap_return_4_preg = 8'd0;
#0 ap_return_5_preg = 8'd0;
#0 ap_return_6_preg = 32'd0;
#0 ap_return_7_preg = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_412_p3 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_412_p3 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_io))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_io))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_return_0_preg <= ap_phi_mux_p_0161_phi_fu_384_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_return_1_preg <= or_ln193_fu_662_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_return_2_preg <= or_ln193_1_fu_667_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_return_3_preg <= ap_phi_mux_phi_ln193_2_phi_fu_343_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_return_4_preg <= ap_phi_mux_phi_ln193_phi_fu_324_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_return_5_preg <= ap_phi_mux_phi_ln193_1_phi_fu_333_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_return_6_preg <= ap_phi_mux_phi_ln193_3_phi_fu_352_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_return_7_preg <= ap_phi_mux_phi_ln193_4_phi_fu_373_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        p_0161_reg_380 <= 1'd0;
    end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (tmp_fu_412_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0161_reg_380 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        phi_ln193_1_reg_330 <= 8'd1;
    end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (tmp_fu_412_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln193_1_reg_330 <= decimation_counter_r;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        phi_ln193_2_reg_340 <= p_Repl2_2_reg_835;
    end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (tmp_fu_412_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln193_2_reg_340 <= break_after_pulse_re;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        phi_ln193_3_reg_349 <= header_5_reg_840;
    end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (tmp_fu_412_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln193_3_reg_349 <= num_samples_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        phi_ln193_4_reg_370 <= 32'd1;
    end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (tmp_fu_412_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln193_4_reg_370 <= sample_counter_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        phi_ln193_reg_321 <= decimation_value_0_n_reg_846;
    end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (tmp_fu_412_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln193_reg_321 <= decimation_value_rea;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        write_flag3_0_reg_358 <= 1'd1;
    end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (tmp_fu_412_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag3_0_reg_358 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln175_fu_515_p2 == 1'd0))) begin
        x1_0_reg_310 <= x_1_fu_521_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_io))) begin
        x1_0_reg_310 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_412_p3 == 1'd0))) begin
        x_0_reg_301 <= sample_counter_read;
    end else if (((icmp_ln126_fu_420_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_0_reg_301 <= x_fu_425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_io))) begin
        decimation_value_0_n_reg_846 <= {{pulse_metadata_V_rea_reg_808[847:840]}};
        header_4_reg_856[7 : 0] <= header_4_fu_508_p1[7 : 0];
        header_5_reg_840 <= {{pulse_metadata_V_rea_reg_808[839:808]}};
        header_6_reg_861 <= header_6_fu_512_p1;
        p_Repl2_2_reg_835 <= pulse_metadata_V_rea_reg_808[32'd851];
        tmp_3_reg_851 <= tmp_3_fu_492_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln126_reg_823 <= icmp_ln126_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln175_reg_866 <= icmp_ln175_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        pulse_metadata_V_rea_reg_808 <= pulse_metadata_V_TDATA;
        tmp_reg_819 <= pulse_metadata_V_TDATA[32'd852];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln175_fu_515_p2 == 1'd0))) begin
        tmp_data_V_1_reg_875 <= tmp_data_V_1_fu_643_p3;
    end
end

always @ (*) begin
    if ((icmp_ln126_fu_420_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln175_fu_515_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        ap_phi_mux_p_0161_phi_fu_384_p4 = 1'd0;
    end else begin
        ap_phi_mux_p_0161_phi_fu_384_p4 = p_0161_reg_380;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        ap_phi_mux_phi_ln193_1_phi_fu_333_p4 = 8'd1;
    end else begin
        ap_phi_mux_phi_ln193_1_phi_fu_333_p4 = phi_ln193_1_reg_330;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        ap_phi_mux_phi_ln193_2_phi_fu_343_p4 = p_Repl2_2_reg_835;
    end else begin
        ap_phi_mux_phi_ln193_2_phi_fu_343_p4 = phi_ln193_2_reg_340;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        ap_phi_mux_phi_ln193_3_phi_fu_352_p4 = header_5_reg_840;
    end else begin
        ap_phi_mux_phi_ln193_3_phi_fu_352_p4 = phi_ln193_3_reg_349;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        ap_phi_mux_phi_ln193_4_phi_fu_373_p4 = 32'd1;
    end else begin
        ap_phi_mux_phi_ln193_4_phi_fu_373_p4 = phi_ln193_4_reg_370;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        ap_phi_mux_phi_ln193_phi_fu_324_p4 = decimation_value_0_n_reg_846;
    end else begin
        ap_phi_mux_phi_ln193_phi_fu_324_p4 = phi_ln193_reg_321;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        ap_phi_mux_write_flag3_0_phi_fu_362_p4 = 1'd1;
    end else begin
        ap_phi_mux_write_flag3_0_phi_fu_362_p4 = write_flag3_0_reg_358;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_return_0 = ap_phi_mux_p_0161_phi_fu_384_p4;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_return_1 = or_ln193_fu_662_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_return_2 = or_ln193_1_fu_667_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_return_3 = ap_phi_mux_phi_ln193_2_phi_fu_343_p4;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_return_4 = ap_phi_mux_phi_ln193_phi_fu_324_p4;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_return_5 = ap_phi_mux_phi_ln193_1_phi_fu_333_p4;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_return_6 = ap_phi_mux_phi_ln193_3_phi_fu_352_p4;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_return_7 = ap_phi_mux_phi_ln193_4_phi_fu_373_p4;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0))) begin
        o_data_TDATA = data_word_data_V;
    end else if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln175_reg_866 == 1'd0))) begin
        o_data_TDATA = tmp_data_V_1_reg_875;
    end else if (((p_Repl2_s_fu_431_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        o_data_TDATA = 32'd2560137368;
    end else if (((icmp_ln126_reg_823 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_data_TDATA = 32'd1970632053;
    end else begin
        o_data_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln175_reg_866 == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((p_Repl2_s_fu_431_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln126_reg_823 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0)))) begin
        o_data_TDATA_blk_n = o_data_TREADY;
    end else begin
        o_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln175_reg_866 == 1'd0))) begin
        o_data_TUSER = p_Result_6_fu_651_p4;
    end else if (((p_Repl2_s_fu_431_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        o_data_TUSER = p_Result_4_fu_447_p4;
    end else if ((((icmp_ln126_reg_823 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0)))) begin
        o_data_TUSER = grp_fu_401_p4;
    end else begin
        o_data_TUSER = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln175_reg_866 == 1'd0)) | ((p_Repl2_s_fu_431_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_io)) | ((icmp_ln126_reg_823 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7) & (tmp_reg_819 == 1'd0)))) begin
        o_data_TVALID = 1'b1;
    end else begin
        o_data_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        pulse_metadata_V_TDATA_blk_n = pulse_metadata_V_TVALID;
    end else begin
        pulse_metadata_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        pulse_metadata_V_TREADY = 1'b1;
    end else begin
        pulse_metadata_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_412_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0)) & (tmp_fu_412_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln126_fu_420_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln126_fu_420_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_io))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln175_fu_515_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln175_fu_515_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b0 == ap_block_state7_io) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_state1 = ((pulse_metadata_V_TVALID == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln126_reg_823 == 1'd1) & (o_data_TREADY == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((p_Repl2_s_fu_431_p3 == 1'd1) & (o_data_TREADY == 1'b0));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((o_data_TREADY == 1'b0) & (icmp_ln175_reg_866 == 1'd0));
end

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((o_data_TREADY == 1'b0) & (tmp_reg_819 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    grp_fu_392_p4 = data_word_user_V;
    grp_fu_392_p4[32'd64] = |(1'd1);
end

always @ (*) begin
    grp_fu_401_p4 = grp_fu_392_p4;
    grp_fu_401_p4[32'd72] = |(1'd0);
end

assign header_4_fu_508_p1 = tmp_sequence_index_l_fu_499_p4;

assign header_6_fu_512_p1 = pulse_metadata_V_rea_reg_808[31:0];

assign icmp_ln126_fu_420_p2 = ((x_0_reg_301 < num_samples_read) ? 1'b1 : 1'b0);

assign icmp_ln175_fu_515_p2 = ((x1_0_reg_310 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln17_1_fu_537_p2 = ((trunc_ln179_fu_527_p1 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln17_2_fu_543_p2 = ((trunc_ln179_fu_527_p1 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln17_3_fu_549_p2 = ((trunc_ln179_fu_527_p1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln17_4_fu_555_p2 = ((trunc_ln179_fu_527_p1 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln17_5_fu_561_p2 = ((trunc_ln179_fu_527_p1 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln17_6_fu_567_p2 = ((trunc_ln179_fu_527_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_531_p2 = ((trunc_ln179_fu_527_p1 == 3'd1) ? 1'b1 : 1'b0);

assign o_data_TDEST = data_word_dest_V;

assign o_data_TID = data_word_id_V;

assign o_data_TKEEP = data_word_keep_V;

assign o_data_TLAST = data_word_last_V;

assign o_data_TSTRB = data_word_strb_V;

assign or_ln17_1_fu_592_p2 = (icmp_ln17_4_fu_555_p2 | icmp_ln17_3_fu_549_p2);

assign or_ln17_2_fu_604_p2 = (icmp_ln17_2_fu_543_p2 | icmp_ln17_1_fu_537_p2);

assign or_ln17_3_fu_629_p2 = (or_ln17_fu_580_p2 | or_ln17_1_fu_592_p2);

assign or_ln17_fu_580_p2 = (icmp_ln17_6_fu_567_p2 | icmp_ln17_5_fu_561_p2);

assign or_ln193_1_fu_667_p1 = in_a_xfer_bundle_rea;

assign or_ln193_1_fu_667_p2 = (or_ln193_1_fu_667_p1 | ap_phi_mux_write_flag3_0_phi_fu_362_p4);

assign or_ln193_fu_662_p1 = in_a_pulse_read;

assign or_ln193_fu_662_p2 = (or_ln193_fu_662_p1 | ap_phi_mux_write_flag3_0_phi_fu_362_p4);

assign p_Repl2_s_fu_431_p3 = pulse_metadata_V_rea_reg_808[32'd850];

always @ (*) begin
    p_Result_3_fu_438_p4 = data_word_user_V;
    p_Result_3_fu_438_p4[32'd64] = |(1'd0);
end

always @ (*) begin
    p_Result_4_fu_447_p4 = p_Result_3_fu_438_p4;
    p_Result_4_fu_447_p4[32'd72] = |(1'd0);
end

always @ (*) begin
    p_Result_6_fu_651_p4 = grp_fu_392_p4;
    p_Result_6_fu_651_p4[32'd72] = |(1'd1);
end

assign select_ln17_1_fu_586_p3 = ((icmp_ln17_4_fu_555_p2[0:0] === 1'b1) ? header_5_reg_840 : header_4_reg_856);

assign select_ln17_2_fu_598_p3 = ((icmp_ln17_2_fu_543_p2[0:0] === 1'b1) ? pos_enc_1 : pos_enc_0);

assign select_ln17_3_fu_610_p3 = ((icmp_ln17_fu_531_p2[0:0] === 1'b1) ? tmp_3_reg_851 : 20'd0);

assign select_ln17_4_fu_621_p3 = ((or_ln17_fu_580_p2[0:0] === 1'b1) ? select_ln17_fu_573_p3 : select_ln17_1_fu_586_p3);

assign select_ln17_5_fu_635_p3 = ((or_ln17_2_fu_604_p2[0:0] === 1'b1) ? select_ln17_2_fu_598_p3 : zext_ln17_fu_617_p1);

assign select_ln17_fu_573_p3 = ((icmp_ln17_6_fu_567_p2[0:0] === 1'b1) ? 32'd3126770193 : header_6_reg_861);

assign tmp_2_fu_483_p4 = {{pulse_metadata_V_rea_reg_808[851:848]}};

assign tmp_3_fu_492_p3 = {{tmp_2_fu_483_p4}, {flags}};

assign tmp_data_V_1_fu_643_p3 = ((or_ln17_3_fu_629_p2[0:0] === 1'b1) ? select_ln17_4_fu_621_p3 : select_ln17_5_fu_635_p3);

assign tmp_fu_412_p3 = pulse_metadata_V_TDATA[32'd852];

assign tmp_sequence_index_l_fu_499_p4 = {{pulse_metadata_V_rea_reg_808[807:800]}};

assign trunc_ln179_fu_527_p1 = x1_0_reg_310[2:0];

assign x_1_fu_521_p2 = (x1_0_reg_310 + 4'd1);

assign x_fu_425_p2 = (x_0_reg_301 + 32'd1);

assign zext_ln17_fu_617_p1 = select_ln17_3_fu_610_p3;

always @ (posedge ap_clk) begin
    header_4_reg_856[31:8] <= 24'b000000000000000000000000;
end

endmodule //handle_header
