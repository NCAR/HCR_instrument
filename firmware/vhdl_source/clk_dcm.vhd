-----------------------------------------------------------------
-- Copyright (c) 1995-2003 Xilinx, Inc.
-- All Right Reserved.
-----------------------------------------------------------------
--   ____  ____ 
--  /   /\/   / 
-- /___/  \  /    Vendor: Xilinx 
-- \   \   \/     Version : 7.1.04i
--  \   \         Application : Pentek Model 7142 Signal FPGA
--  /   /         Filename : sdram_sys_clk_dcm.vhd
-- /___/   /\     Timestamp : 02/17/2006 10:01:26
-- \   \  /  \ 
--  \___\/\___\ 
--
--Command: 
--Design Name: sdram_sys_clk_dcm
--
-- Module sdram_sys_clk_dcm
-- Generated by Xilinx Architecture Wizard
-- Written for synthesis tool: XST
-- --------------------------------------------------------------
-- Last Modified: 03/15/07
-- Modified by  : Marc A. Lee, formatted for GateFlow
--                  (Model 4953-142)
--                  Pentek, Inc.
--                  One Park Way,
--                  Upper Saddle River, NJ 07458
--                  (201) 818-5900
--                  www.pentek.com
-----------------------------------------------------------------
--  Change log  :
--      10/07/05: Preliminary formatting for GateFlow (4953-140)
--      08/31/06: Re-released with minor changes in comments
--                  for Model 7142 GateFlow kit (4953-142)
--      02/09/07: Reformatted all Port Maps such that ports are
--                  listed in same order as component declara-
--                  tions.  For clarity, moved statement assign-
--                  ing clk0_buf to CLK0_OUT to follow the
--                  instantiation of DCM_ADV (which generates
--                  clk0_buf).
--      03/15/07: Port kit to VLX100 FPGA - Add project name in
--                  Application field, and removed reference to
--                  Option 055 above.
-----------------------------------------------------------------

LIBRARY IEEE;
USE     IEEE.std_logic_1164.all;
USE     IEEE.numeric_std.all;

-- synopsys translate_off
LIBRARY UNISIM;
USE     UNISIM.Vcomponents.all;
-- synopsys translate_on

ENTITY CLK_DCM is
PORT (
    -- Clock Feedback Input
    CLKFB_IN    : in  std_logic;
    -- DCM Clock Input
    CLKIN_IN    : in  std_logic;
    -- DCM Reset Input
    RST_IN      : in  std_logic;

    -- 0 Degree Phase Clock Output
    CLK0_OUT    : out std_logic;
    -- DCM Lock Status Output
    LOCKED_OUT  : out std_logic
    );
END CLK_DCM;

-----------------------------------------------------------------

ARCHITECTURE BEHAVIORAL of CLK_DCM is

-----------------------------------------------------------------
-- ***************** Component  Declarations ***************** --
-----------------------------------------------------------------

COMPONENT BUFG
PORT (
    I   : in  std_logic;

    O   : out std_logic
    );
END COMPONENT;

COMPONENT DCM_ADV
GENERIC (
    Clk_Feedback            : string    := "1X";
    Clkdv_Divide            : real      := 2.000000;
    Clkfx_Divide            : integer   := 1;
    Clkfx_Multiply          : integer   := 4;
    Clkin_Divide_By_2       : boolean   := FALSE;
    Clkin_Period            : real      := 0.000000;
    Clkout_Phase_Shift      : string    := "NONE";
    Dcm_Autocalibration     : boolean   := TRUE;
    Dcm_Performance_Mode    : string    := "MAX_SPEED";
    Deskew_Adjust           : string    := "SYSTEM_SYNCHRONOUS";
    Dfs_Frequency_Mode      : string    := "LOW";
    Dll_Frequency_Mode      : string    := "LOW";
    Duty_Cycle_Correction   : boolean   := TRUE;
    Factory_Jf              : bit_vector:= "1100000010000000";
    Phase_Shift             : integer   := 0;
    Startup_Wait            : boolean   := FALSE
    );
PORT (
    Clkfb       : in  std_logic;
    Clkin       : in  std_logic;
    Dclk        : in  std_logic;
    Den         : in  std_logic;
    Dwe         : in  std_logic;
    Psclk       : in  std_logic;
    Psen        : in  std_logic;
    Psincdec    : in  std_logic;
    Rst         : in  std_logic;

    Daddr       : in  std_logic_vector (6 downto 0);
    Di          : in  std_logic_vector (15 downto 0);

    Do          : out std_logic_vector (15 downto 0);

    Clk0        : out std_logic;
    Clk180      : out std_logic;
    Clk270      : out std_logic;
    Clk2x       : out std_logic;
    Clk2x180    : out std_logic;
    Clk90       : out std_logic;
    Clkdv       : out std_logic;
    Clkfx       : out std_logic;
    Clkfx180    : out std_logic;
    Drdy        : out std_logic;
    Locked      : out std_logic;
    Psdone      : out std_logic
    );
END COMPONENT;

-----------------------------------------------------------------
-- ******************* Signal Declarations ******************* --
-----------------------------------------------------------------

SIGNAL clk0_buf     : std_logic;
SIGNAL gnd2         : std_logic;

SIGNAL gnd          : std_logic_vector (6 downto 0);
SIGNAL gnd1         : std_logic_vector (15 downto 0);

-----------------------------------------------------------------
-- ************** Main Architecture  Definition ************** --
-----------------------------------------------------------------

BEGIN

    -------------------------------------------------------------
    -- ***************** Signal  Assignments ***************** --
    -------------------------------------------------------------

    gnd(6 downto 0)     <= "0000000";
    gnd1(15 downto 0)   <= "0000000000000000";
    gnd2                <= '0';

    DCM_ADV_INST : DCM_ADV
    GENERIC MAP (
        Clk_Feedback            => "1X",
        Clkdv_Divide            => 4.000000,
        Clkfx_Divide            => 1,
        Clkfx_Multiply          => 4,
        Clkin_Divide_By_2       => FALSE,
        Clkin_Period            => 5.000000,
        Clkout_Phase_Shift      => "NONE",
        Dcm_Autocalibration     => TRUE,
        Dcm_Performance_Mode    => "MAX_SPEED",
        Deskew_Adjust           => "SYSTEM_SYNCHRONOUS",
        Dfs_Frequency_Mode      => "HIGH",
        Dll_Frequency_Mode      => "HIGH",
        Duty_Cycle_Correction   => TRUE,
        Factory_Jf              => "1111000011110000",
        Phase_Shift             => 0,
        Startup_Wait            => FALSE
        )
    PORT MAP (
        Clkfb       => CLKFB_IN,
        Clkin       => CLKIN_IN,
        Dclk        => gnd2,
        Den         => gnd2,
        Dwe         => gnd2,
        Psclk       => gnd2,
        Psen        => gnd2,
        Psincdec    => gnd2,
        Rst         => RST_IN,

        Daddr       => gnd,
        Di          => gnd1,

        Do          => OPEN,

        Clk0        => clk0_buf,
        Clk180      => OPEN,
        Clk270      => OPEN,
        Clk2x       => OPEN,
        Clk2x180    => OPEN,
        Clk90       => OPEN,
        Clkdv       => OPEN,
        Clkfx       => OPEN,
        Clkfx180    => OPEN,
        Drdy        => OPEN,
        Locked      => LOCKED_OUT,
        Psdone      => OPEN
        );

    CLK0_OUT    <= clk0_buf;

END BEHAVIORAL;